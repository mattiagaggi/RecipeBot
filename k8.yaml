########################################
# cookbot Deployment
########################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cookbot
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cookbot
  template:
    metadata:
      labels:
        app: cookbot
    spec:
      volumes:
        - name: mlflow-data
          persistentVolumeClaim:
            claimName: mlflow-pvc
      initContainers:
        - name: mlflow-check
          image: curlimages/curl:8.1.2
          command:
            - sh
            - -c
            - |
              echo "Testing MLflow connectivity..."
              for i in $(seq 1 60); do
                echo "Attempt $i/60..."
                # Only check for the base URL which returns 200
                status_ui=$(curl -s -o /dev/null -w "%{http_code}" --max-time 10 http://mlflow:5002/)
                
                if [ "$status_ui" -eq 200 ]; then
                  echo "MLflow UI is up!"
                  # Try an API endpoint that returns 400 (meaning it exists but needs parameters)
                  status_api=$(curl -s -o /dev/null -w "%{http_code}" --max-time 10 http://mlflow:5002/api/2.0/mlflow/experiments/search)
                  if [ "$status_api" -eq 400 ]; then
                    echo "MLflow API is accessible!"
                    exit 0
                  fi
                fi
                echo "MLflow returned UI status $status_ui"
                echo "Waiting 5 seconds..."
                sleep 5
              done
              echo "MLflow not available after 60 attempts"
              exit 1
      containers:
        - name: cookbot
          image: cookbot:local
          imagePullPolicy: IfNotPresent
          command: ["python", "src/main.py"]
          tty: true
          stdin: true
          envFrom:
            - configMapRef:
                name: cookbot-env
          env:
            - name: MLFLOW_TRACKING_URI
              value: "http://mlflow:5002"
            - name: MLFLOW_ARTIFACT_LOCATION
              value: "file:///mlflow/artifacts"
            # Reduce startup delay since we have the init container check
            - name: MLFLOW_STARTUP_DELAY
              value: "5"
            # Add debug logging for MLflow
            - name: MLFLOW_TRACKING_VERBOSE
              value: "true"
            # Add experiment name to ensure consistent experiment usage
            - name: MLFLOW_EXPERIMENT_NAME
              value: "Default"
            # Optionally silence Git warnings:
            - name: GIT_PYTHON_REFRESH
              value: "quiet"
            - name: KUBERNETES_SERVICE_HOST
              value: "true"
            - name: PYTHONUNBUFFERED
              value: "1"
            - name: PYTHONIOENCODING
              value: "UTF-8"
            - name: PYTHONPATH
              value: "/app"
          ports:
            - containerPort: 9090
          resources:
            requests:
              memory: "512Mi"
              cpu: "100m"
            limits:
              memory: "1.5Gi"
              cpu: "500m"
          readinessProbe:
            httpGet:
              path: /
              port: 9090
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 15
            failureThreshold: 5
          livenessProbe:
            httpGet:
              path: /
              port: 9090
            initialDelaySeconds: 90
            periodSeconds: 20
            timeoutSeconds: 15
            failureThreshold: 5
          volumeMounts:
            - name: mlflow-data
              mountPath: /mlflow

---
########################################
# cookbot Service
########################################
apiVersion: v1
kind: Service
metadata:
  name: cookbot
spec:
  selector:
    app: cookbot
  ports:
    - protocol: TCP
      port: 9090
      targetPort: 9090
      name: web
  type: NodePort


---
########################################
# mlflow Deployment
########################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mlflow
  template:
    metadata:
      labels:
        app: mlflow
    spec:
      volumes:
        - name: mlflow-data
          persistentVolumeClaim:
            claimName: mlflow-pvc
      initContainers:
        - name: init-mlflow
          image: mlflow:local
          command:
            - sh
            - -c
            - |
              echo "Initializing MLflow database..."
              mkdir -p /mlflow/store
              mkdir -p /mlflow/artifacts
              # Create the default experiment explicitly
              python -c "
              import mlflow
              mlflow.set_tracking_uri('file:///mlflow/store')
              try:
                  experiment = mlflow.get_experiment_by_name('Default')
                  if not experiment:
                      mlflow.create_experiment('Default')
                  print('Default experiment initialized')
              except Exception as e:
                  print(f'Experiment initialization: {e}')
              "
          volumeMounts:
            - name: mlflow-data
              mountPath: /mlflow
      containers:
        - name: mlflow
          image: mlflow:local
          ports:
            - containerPort: 5002
          volumeMounts:
            - name: mlflow-data
              mountPath: /mlflow
          command:
            - mlflow
            - server
            - "--host"
            - "0.0.0.0"
            - "--port"
            - "5002"
            - "--backend-store-uri"
            - "file:///mlflow/store"
            - "--default-artifact-root"
            - "file:///mlflow/artifacts"
            - "--serve-artifacts"
          env:
            - name: PYTHONUNBUFFERED
              value: "1"
            - name: MLFLOW_LOGGING_LEVEL
              value: "DEBUG"  # Change to DEBUG for more verbose logging
          readinessProbe:
            httpGet:
              path: /
              port: 5002
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /
              port: 5002
            initialDelaySeconds: 60
            periodSeconds: 20
            timeoutSeconds: 10
          resources:
            requests:
              memory: "512Mi"
              cpu: "100m"
            limits:
              memory: "1.5Gi"
              cpu: "500m"

---
########################################
# mlflow Service
########################################
apiVersion: v1
kind: Service
metadata:
  name: mlflow
  labels:
    app: mlflow
spec:
  selector:
    app: mlflow
  ports:
    - port: 5002
      targetPort: 5002
      name: ui
  type: ClusterIP

---
########################################
# Persistent Volume Claim for MLflow
########################################
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mlflow-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

