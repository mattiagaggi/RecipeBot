{"spans": [{"name": "LangGraph", "context": {"span_id": "0xce130d3f7b8c0e61", "trace_id": "0xb03d91058d78089b71e3fce62ee4c8e6"}, "parent_id": null, "start_time": 1740987799731813000, "end_time": 1740987867101764000, "status_code": "ERROR", "status_message": "", "attributes": {"mlflow.traceRequestId": "\"d738b92288744b13936667fc5c4ab62c\"", "mlflow.spanType": "\"CHAIN\"", "mlflow.spanInputs": "{\"messages\": [[\"user\", \"hi give me a recipe for bread for two people white bread specifically\"]]}"}, "events": [{"name": "exception", "timestamp": 1740987867101731, "attributes": {"exception.message": "", "exception.type": "KeyboardInterrupt", "exception.stacktrace": "KeyboardInterrupt()Traceback (most recent call last):\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langgraph/pregel/__init__.py\", line 1670, in stream\n    for _ in runner.tick(\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langgraph/pregel/runner.py\", line 230, in tick\n    run_with_retry(\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langgraph/pregel/retry.py\", line 40, in run_with_retry\n    return task.proc.invoke(task.input, config)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 592, in safe_patch_function\n    patch_function(call_original, *args, **kwargs)\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 74, in patched_inference\n    result = _invoke(self, *args, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 66, in _invoke\n    return original(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 573, in call_original\n    return call_original_fn_with_event_logging(_original_fn, og_args, og_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 508, in call_original_fn_with_event_logging\n    original_fn_result = original_fn(*og_args, **og_kwargs)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 570, in _original_fn\n    original_result = original(*_og_args, **_og_kwargs)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langgraph/utils/runnable.py\", line 462, in invoke\n    input = step.invoke(input, config, **kwargs)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 592, in safe_patch_function\n    patch_function(call_original, *args, **kwargs)\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 74, in patched_inference\n    result = _invoke(self, *args, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 66, in _invoke\n    return original(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 573, in call_original\n    return call_original_fn_with_event_logging(_original_fn, og_args, og_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 508, in call_original_fn_with_event_logging\n    original_fn_result = original_fn(*og_args, **og_kwargs)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 570, in _original_fn\n    original_result = original(*_og_args, **_og_kwargs)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langgraph/utils/runnable.py\", line 226, in invoke\n    ret = context.run(self.func, *args, **kwargs)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/cookbot/src/langraph_utils.py\", line 27, in tool_node\n    tool_result = tools_by_name[tool_call[\"name\"]].invoke(tool_call[\"args\"])\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 592, in safe_patch_function\n    patch_function(call_original, *args, **kwargs)\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 74, in patched_inference\n    result = _invoke(self, *args, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 66, in _invoke\n    return original(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 573, in call_original\n    return call_original_fn_with_event_logging(_original_fn, og_args, og_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 508, in call_original_fn_with_event_logging\n    original_fn_result = original_fn(*og_args, **og_kwargs)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 570, in _original_fn\n    original_result = original(*_og_args, **_og_kwargs)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/tools/base.py\", line 484, in invoke\n    return self.run(tool_input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/tools/base.py\", line 725, in run\n    raise error_to_raise\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/tools/base.py\", line 693, in run\n    response = context.run(self._run, *tool_args, **tool_kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/tools/structured.py\", line 80, in _run\n    return self.func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/cookbot/src/tools.py\", line 247, in create_recipe_from_intent_tool\n    result = create_recipe_from_intent(intent)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/cookbot/src/tool_functions.py\", line 117, in create_recipe_from_intent\n    recipe = chain.invoke({\n             ^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 592, in safe_patch_function\n    patch_function(call_original, *args, **kwargs)\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 74, in patched_inference\n    result = _invoke(self, *args, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 66, in _invoke\n    return original(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 573, in call_original\n    return call_original_fn_with_event_logging(_original_fn, og_args, og_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 508, in call_original_fn_with_event_logging\n    original_fn_result = original_fn(*og_args, **og_kwargs)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 570, in _original_fn\n    original_result = original(*_og_args, **_og_kwargs)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/runnables/base.py\", line 3022, in invoke\n    input = context.run(step.invoke, input, config)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 592, in safe_patch_function\n    patch_function(call_original, *args, **kwargs)\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 74, in patched_inference\n    result = _invoke(self, *args, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 66, in _invoke\n    return original(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 573, in call_original\n    return call_original_fn_with_event_logging(_original_fn, og_args, og_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 508, in call_original_fn_with_event_logging\n    original_fn_result = original_fn(*og_args, **og_kwargs)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 570, in _original_fn\n    original_result = original(*_og_args, **_og_kwargs)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/runnables/base.py\", line 5352, in invoke\n    return self.bound.invoke(\n           ^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 592, in safe_patch_function\n    patch_function(call_original, *args, **kwargs)\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 74, in patched_inference\n    result = _invoke(self, *args, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 66, in _invoke\n    return original(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 573, in call_original\n    return call_original_fn_with_event_logging(_original_fn, og_args, og_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 508, in call_original_fn_with_event_logging\n    original_fn_result = original_fn(*og_args, **og_kwargs)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 570, in _original_fn\n    original_result = original(*_og_args, **_og_kwargs)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/language_models/chat_models.py\", line 286, in invoke\n    self.generate_prompt(\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/language_models/chat_models.py\", line 790, in generate_prompt\n    return self.generate(prompt_messages, stop=stop, callbacks=callbacks, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/language_models/chat_models.py\", line 647, in generate\n    raise e\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/language_models/chat_models.py\", line 637, in generate\n    self._generate_with_cache(\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/language_models/chat_models.py\", line 855, in _generate_with_cache\n    result = self._generate(\n             ^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_openai/chat_models/base.py\", line 782, in _generate\n    response = self.root_client.beta.chat.completions.parse(**payload)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/openai/resources/beta/chat/completions.py\", line 160, in parse\n    return self._post(\n           ^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/openai/_base_client.py\", line 1283, in post\n    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/openai/_base_client.py\", line 960, in request\n    return self._request(\n           ^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/openai/_base_client.py\", line 996, in _request\n    response = self._client.send(\n               ^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpx/_client.py\", line 914, in send\n    response = self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpx/_client.py\", line 942, in _send_handling_auth\n    response = self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpx/_client.py\", line 979, in _send_handling_redirects\n    response = self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpx/_client.py\", line 1014, in _send_single_request\n    response = transport.handle_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpx/_transports/default.py\", line 250, in handle_request\n    resp = self._pool.handle_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_sync/connection_pool.py\", line 256, in handle_request\n    raise exc from None\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_sync/connection_pool.py\", line 236, in handle_request\n    response = connection.handle_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_sync/connection.py\", line 103, in handle_request\n    return self._connection.handle_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_sync/http11.py\", line 136, in handle_request\n    raise exc\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_sync/http11.py\", line 106, in handle_request\n    ) = self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_sync/http11.py\", line 177, in _receive_response_headers\n    event = self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_sync/http11.py\", line 217, in _receive_event\n    data = self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_backends/sync.py\", line 128, in read\n    return self._sock.recv(max_bytes)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/ssl.py\", line 1295, in recv\n    return self.read(buflen)\n           ^^^^^^^^^^^^^^^^^\n\n\n  File \"/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/ssl.py\", line 1168, in read\n    return self._sslobj.read(len)\n           ^^^^^^^^^^^^^^^^^^^^^^\n\n\nKeyboardInterrupt"}}]}, {"name": "__start__", "context": {"span_id": "0x169f8b1259f04b71", "trace_id": "0xb03d91058d78089b71e3fce62ee4c8e6"}, "parent_id": "0xce130d3f7b8c0e61", "start_time": 1740987799732914000, "end_time": 1740987799734564000, "status_code": "OK", "status_message": "", "attributes": {"mlflow.traceRequestId": "\"d738b92288744b13936667fc5c4ab62c\"", "mlflow.spanType": "\"CHAIN\"", "metadata": "{\"langgraph_step\": 0, \"langgraph_node\": \"__start__\", \"langgraph_triggers\": [\"__start__\"], \"langgraph_path\": [\"__pregel_pull\", \"__start__\"], \"langgraph_checkpoint_ns\": \"__start__:9be111b0-d230-9518-0143-578f01b42e88\"}", "mlflow.spanInputs": "{\"messages\": [[\"user\", \"hi give me a recipe for bread for two people white bread specifically\"]]}", "mlflow.spanOutputs": "{\"messages\": [[\"user\", \"hi give me a recipe for bread for two people white bread specifically\"]]}"}, "events": []}, {"name": "ChannelWrite<...>", "context": {"span_id": "0x9f55ae445813a761", "trace_id": "0xb03d91058d78089b71e3fce62ee4c8e6"}, "parent_id": "0x169f8b1259f04b71", "start_time": 1740987799733157000, "end_time": 1740987799733357000, "status_code": "OK", "status_message": "", "attributes": {"mlflow.traceRequestId": "\"d738b92288744b13936667fc5c4ab62c\"", "mlflow.spanType": "\"CHAIN\"", "metadata": "{\"langgraph_step\": 0, \"langgraph_node\": \"__start__\", \"langgraph_triggers\": [\"__start__\"], \"langgraph_path\": [\"__pregel_pull\", \"__start__\"], \"langgraph_checkpoint_ns\": \"__start__:9be111b0-d230-9518-0143-578f01b42e88\"}", "mlflow.spanInputs": "{\"messages\": [[\"user\", \"hi give me a recipe for bread for two people white bread specifically\"]]}", "mlflow.spanOutputs": "{\"messages\": [[\"user\", \"hi give me a recipe for bread for two people white bread specifically\"]]}"}, "events": []}, {"name": "ChannelWrite<start:agent>", "context": {"span_id": "0x3e90ef50cf7dda34", "trace_id": "0xb03d91058d78089b71e3fce62ee4c8e6"}, "parent_id": "0x169f8b1259f04b71", "start_time": 1740987799734366000, "end_time": 1740987799734525000, "status_code": "OK", "status_message": "", "attributes": {"mlflow.traceRequestId": "\"d738b92288744b13936667fc5c4ab62c\"", "mlflow.spanType": "\"CHAIN\"", "metadata": "{\"langgraph_step\": 0, \"langgraph_node\": \"__start__\", \"langgraph_triggers\": [\"__start__\"], \"langgraph_path\": [\"__pregel_pull\", \"__start__\"], \"langgraph_checkpoint_ns\": \"__start__:9be111b0-d230-9518-0143-578f01b42e88\"}", "mlflow.spanInputs": "{\"messages\": [[\"user\", \"hi give me a recipe for bread for two people white bread specifically\"]]}", "mlflow.spanOutputs": "{\"messages\": [[\"user\", \"hi give me a recipe for bread for two people white bread specifically\"]]}"}, "events": []}, {"name": "agent", "context": {"span_id": "0xe463a66b0c4b84b8", "trace_id": "0xb03d91058d78089b71e3fce62ee4c8e6"}, "parent_id": "0xce130d3f7b8c0e61", "start_time": 1740987799735105000, "end_time": 1740987801039540000, "status_code": "OK", "status_message": "", "attributes": {"mlflow.traceRequestId": "\"d738b92288744b13936667fc5c4ab62c\"", "mlflow.spanType": "\"CHAIN\"", "metadata": "{\"langgraph_step\": 1, \"langgraph_node\": \"agent\", \"langgraph_triggers\": [\"start:agent\"], \"langgraph_path\": [\"__pregel_pull\", \"agent\"], \"langgraph_checkpoint_ns\": \"agent:fbb65873-47fe-783e-8c99-a605b4f48da3\"}", "mlflow.spanInputs": "{\"messages\": [{\"content\": \"hi give me a recipe for bread for two people white bread specifically\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"2d237bf9-b4e8-4564-bd66-a7906c8c11bb\", \"example\": false}]}", "mlflow.spanOutputs": "{\"messages\": [{\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"call_zfZ9kQ9q3qPBBHeZU7gq2wFJ\", \"function\": {\"arguments\": \"{\\\"intent\\\":\\\"create a recipe for white bread for two people\\\"}\", \"name\": \"create_recipe_from_intent_tool\"}, \"type\": \"function\"}], \"refusal\": null}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 27, \"prompt_tokens\": 864, \"total_tokens\": 891, \"completion_tokens_details\": {\"accepted_prediction_tokens\": 0, \"audio_tokens\": 0, \"reasoning_tokens\": 0, \"rejected_prediction_tokens\": 0}, \"prompt_tokens_details\": {\"audio_tokens\": 0, \"cached_tokens\": 0}}, \"model_name\": \"gpt-4o-mini-2024-07-18\", \"system_fingerprint\": \"fp_06737a9306\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run-d4f74917-02e0-4198-b12a-5a3821468204-0\", \"example\": false, \"tool_calls\": [{\"name\": \"create_recipe_from_intent_tool\", \"args\": {\"intent\": \"create a recipe for white bread for two people\"}, \"id\": \"call_zfZ9kQ9q3qPBBHeZU7gq2wFJ\", \"type\": \"tool_call\"}], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 864, \"output_tokens\": 27, \"total_tokens\": 891, \"input_token_details\": {\"audio\": 0, \"cache_read\": 0}, \"output_token_details\": {\"audio\": 0, \"reasoning\": 0}}}]}"}, "events": []}, {"name": "ChatOpenAI_1", "context": {"span_id": "0xa061291470808bce", "trace_id": "0xb03d91058d78089b71e3fce62ee4c8e6"}, "parent_id": "0xe463a66b0c4b84b8", "start_time": 1740987799773637000, "end_time": 1740987801036877000, "status_code": "OK", "status_message": "", "attributes": {"mlflow.traceRequestId": "\"d738b92288744b13936667fc5c4ab62c\"", "mlflow.spanType": "\"CHAT_MODEL\"", "invocation_params": "{\"model\": \"gpt-4o-mini\", \"model_name\": \"gpt-4o-mini\", \"stream\": false, \"_type\": \"openai-chat\", \"stop\": null, \"tools\": [{\"type\": \"function\", \"function\": {\"name\": \"create_recipe_from_intent_tool\", \"description\": \"create_recipe_from_intent_tool - creates a recipe from a natural language intent.\\n\\n    Args:\\n        intent (str): Natural language description of the recipe the user wants to create\\n            (e.g., \\\"make me a chocolate chip cookie recipe\\\", \\\"create a vegetarian pasta dish with spinach\\\")\\n\\n    Returns:\\n        Recipe: A complete recipe with title, ingredients, quantities, units, and steps or an error message if validation fails\", \"parameters\": {\"properties\": {\"intent\": {\"type\": \"string\"}}, \"required\": [\"intent\"], \"type\": \"object\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"adjust_recipe_quantities_tool\", \"description\": \"adjust_recipe_quantities_tool - adjusts the quantities of ingredients in a recipe based on a natural language input.\\n    Args:\\n        recipe (Recipe): The recipe object containing ingredients, quantities, units, and steps\\n        adjustment (str): Natural language description of how to adjust the recipe\\n            (e.g., \\\"double the recipe\\\", \\\"make it for 6 people instead of 4\\\", \\\"half the portions\\\")\\n    Returns:\\n        Adjusted quantities for each ingredient or an error message if validation fails\", \"parameters\": {\"properties\": {\"recipe\": {\"properties\": {\"ingredients\": {\"description\": \"List of ingredient names.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"quantities\": {\"description\": \"List of quantities for each ingredient\", \"items\": {\"anyOf\": [{\"type\": \"number\"}, {\"type\": \"integer\"}]}, \"type\": \"array\"}, \"units\": {\"description\": \"List of units corresponding to each quantity\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"steps\": {\"description\": \"Ordered list of recipe preparation steps\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"number_of_people\": {\"description\": \"Number of people the recipe is for\", \"type\": \"integer\"}}, \"required\": [\"ingredients\", \"quantities\", \"units\", \"steps\", \"number_of_people\"], \"type\": \"object\"}, \"adjustment\": {\"type\": \"string\"}}, \"required\": [\"recipe\", \"adjustment\"], \"type\": \"object\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"translate_recipe_tool\", \"description\": \"translate_recipe_tool-translates a recipe's ingredients and steps into the specified language.\\n\\n    Args:\\n        recipe (Recipe): The recipe to translate\\n        language (str): Target language for translation\\n\\n    Returns:\\n        Translated ingredients and steps as a list of strings or an error message if validation fails\", \"parameters\": {\"properties\": {\"recipe\": {\"properties\": {\"ingredients\": {\"description\": \"List of ingredient names.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"quantities\": {\"description\": \"List of quantities for each ingredient\", \"items\": {\"anyOf\": [{\"type\": \"number\"}, {\"type\": \"integer\"}]}, \"type\": \"array\"}, \"units\": {\"description\": \"List of units corresponding to each quantity\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"steps\": {\"description\": \"Ordered list of recipe preparation steps\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"number_of_people\": {\"description\": \"Number of people the recipe is for\", \"type\": \"integer\"}}, \"required\": [\"ingredients\", \"quantities\", \"units\", \"steps\", \"number_of_people\"], \"type\": \"object\"}, \"language\": {\"type\": \"string\"}}, \"required\": [\"recipe\", \"language\"], \"type\": \"object\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"clarify_recipe_step_tool\", \"description\": \"clarify_recipe_step_tool - analyzes a recipe and provides detailed clarifications for any steps that might be unclear or need additional explanation.\\n\\n    Args:\\n        recipe (Recipe): A Recipe object containing ingredients, quantities, units, and preparation steps\\n        user_clarification_request (str): A user request for clarification of a specific step in the recipe\\n\\n    Returns:\\n        ClarificationOutput: A detailed explanation of any steps that need clarification, including cooking techniques,\", \"parameters\": {\"properties\": {\"recipe\": {\"properties\": {\"ingredients\": {\"description\": \"List of ingredient names.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"quantities\": {\"description\": \"List of quantities for each ingredient\", \"items\": {\"anyOf\": [{\"type\": \"number\"}, {\"type\": \"integer\"}]}, \"type\": \"array\"}, \"units\": {\"description\": \"List of units corresponding to each quantity\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"steps\": {\"description\": \"Ordered list of recipe preparation steps\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"number_of_people\": {\"description\": \"Number of people the recipe is for\", \"type\": \"integer\"}}, \"required\": [\"ingredients\", \"quantities\", \"units\", \"steps\", \"number_of_people\"], \"type\": \"object\"}, \"clarification_request\": {\"type\": \"string\"}}, \"required\": [\"recipe\", \"clarification_request\"], \"type\": \"object\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"web_search_tool\", \"description\": \"web_search_tool - searches the web for similar recipes using DuckDuckGo.\\n\\n    Args:\\n        recipe (Recipe): The recipe to find similar alternatives for\\n\\n    Returns:\\n        SearchResults: A list of similar recipes found online with their sources or an error message if validation fails\", \"parameters\": {\"properties\": {\"recipe\": {\"properties\": {\"ingredients\": {\"description\": \"List of ingredient names.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"quantities\": {\"description\": \"List of quantities for each ingredient\", \"items\": {\"anyOf\": [{\"type\": \"number\"}, {\"type\": \"integer\"}]}, \"type\": \"array\"}, \"units\": {\"description\": \"List of units corresponding to each quantity\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"steps\": {\"description\": \"Ordered list of recipe preparation steps\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"number_of_people\": {\"description\": \"Number of people the recipe is for\", \"type\": \"integer\"}}, \"required\": [\"ingredients\", \"quantities\", \"units\", \"steps\", \"number_of_people\"], \"type\": \"object\"}}, \"required\": [\"recipe\"], \"type\": \"object\"}}}]}", "options": "{\"stop\": null}", "batch_size": "1", "metadata": "{\"langgraph_step\": 1, \"langgraph_node\": \"agent\", \"langgraph_triggers\": [\"start:agent\"], \"langgraph_path\": [\"__pregel_pull\", \"agent\"], \"langgraph_checkpoint_ns\": \"agent:fbb65873-47fe-783e-8c99-a605b4f48da3\", \"checkpoint_ns\": \"agent:fbb65873-47fe-783e-8c99-a605b4f48da3\", \"ls_provider\": \"openai\", \"ls_model_name\": \"gpt-4o-mini\", \"ls_model_type\": \"chat\", \"ls_temperature\": null}", "mlflow.spanInputs": "[[{\"content\": \"\\nYou are a helpful cooking assistant developed by CookPad, under the guidance of Mattia Gaggi.\\nYour goal is to assist users with recipes, offering friendly and engaging cooking advice.\\nIf a user’s request is not related to cooking, politely redirect them back to cooking topics.\\nUse the specified tools as needed to provide the best possible cooking support. If receiving an error from a tool, explain the error based on the error message.\\n\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"system\", \"name\": null, \"id\": null}, {\"content\": \"hi give me a recipe for bread for two people white bread specifically\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"2d237bf9-b4e8-4564-bd66-a7906c8c11bb\", \"example\": false}]]", "mlflow.chat.tools": "[{\"type\": \"function\", \"function\": {\"name\": \"create_recipe_from_intent_tool\", \"description\": \"create_recipe_from_intent_tool - creates a recipe from a natural language intent.\\n\\n    Args:\\n        intent (str): Natural language description of the recipe the user wants to create\\n            (e.g., \\\"make me a chocolate chip cookie recipe\\\", \\\"create a vegetarian pasta dish with spinach\\\")\\n\\n    Returns:\\n        Recipe: A complete recipe with title, ingredients, quantities, units, and steps or an error message if validation fails\", \"parameters\": {\"properties\": {\"intent\": {\"type\": \"string\"}}, \"type\": \"object\", \"required\": [\"intent\"]}}}, {\"type\": \"function\", \"function\": {\"name\": \"adjust_recipe_quantities_tool\", \"description\": \"adjust_recipe_quantities_tool - adjusts the quantities of ingredients in a recipe based on a natural language input.\\n    Args:\\n        recipe (Recipe): The recipe object containing ingredients, quantities, units, and steps\\n        adjustment (str): Natural language description of how to adjust the recipe\\n            (e.g., \\\"double the recipe\\\", \\\"make it for 6 people instead of 4\\\", \\\"half the portions\\\")\\n    Returns:\\n        Adjusted quantities for each ingredient or an error message if validation fails\", \"parameters\": {\"properties\": {\"recipe\": {\"type\": \"object\"}, \"adjustment\": {\"type\": \"string\"}}, \"type\": \"object\", \"required\": [\"recipe\", \"adjustment\"]}}}, {\"type\": \"function\", \"function\": {\"name\": \"translate_recipe_tool\", \"description\": \"translate_recipe_tool-translates a recipe's ingredients and steps into the specified language.\\n\\n    Args:\\n        recipe (Recipe): The recipe to translate\\n        language (str): Target language for translation\\n\\n    Returns:\\n        Translated ingredients and steps as a list of strings or an error message if validation fails\", \"parameters\": {\"properties\": {\"recipe\": {\"type\": \"object\"}, \"language\": {\"type\": \"string\"}}, \"type\": \"object\", \"required\": [\"recipe\", \"language\"]}}}, {\"type\": \"function\", \"function\": {\"name\": \"clarify_recipe_step_tool\", \"description\": \"clarify_recipe_step_tool - analyzes a recipe and provides detailed clarifications for any steps that might be unclear or need additional explanation.\\n\\n    Args:\\n        recipe (Recipe): A Recipe object containing ingredients, quantities, units, and preparation steps\\n        user_clarification_request (str): A user request for clarification of a specific step in the recipe\\n\\n    Returns:\\n        ClarificationOutput: A detailed explanation of any steps that need clarification, including cooking techniques,\", \"parameters\": {\"properties\": {\"recipe\": {\"type\": \"object\"}, \"clarification_request\": {\"type\": \"string\"}}, \"type\": \"object\", \"required\": [\"recipe\", \"clarification_request\"]}}}, {\"type\": \"function\", \"function\": {\"name\": \"web_search_tool\", \"description\": \"web_search_tool - searches the web for similar recipes using DuckDuckGo.\\n\\n    Args:\\n        recipe (Recipe): The recipe to find similar alternatives for\\n\\n    Returns:\\n        SearchResults: A list of similar recipes found online with their sources or an error message if validation fails\", \"parameters\": {\"properties\": {\"recipe\": {\"type\": \"object\"}}, \"type\": \"object\", \"required\": [\"recipe\"]}}}]", "mlflow.chat.messages": "[{\"role\": \"system\", \"content\": \"\\nYou are a helpful cooking assistant developed by CookPad, under the guidance of Mattia Gaggi.\\nYour goal is to assist users with recipes, offering friendly and engaging cooking advice.\\nIf a user’s request is not related to cooking, politely redirect them back to cooking topics.\\nUse the specified tools as needed to provide the best possible cooking support. If receiving an error from a tool, explain the error based on the error message.\\n\"}, {\"role\": \"user\", \"content\": \"hi give me a recipe for bread for two people white bread specifically\"}, {\"role\": \"assistant\", \"content\": null, \"tool_calls\": [{\"id\": \"call_zfZ9kQ9q3qPBBHeZU7gq2wFJ\", \"type\": \"function\", \"function\": {\"name\": \"create_recipe_from_intent_tool\", \"arguments\": \"{\\\"intent\\\": \\\"create a recipe for white bread for two people\\\"}\"}}]}]", "mlflow.spanOutputs": "{\"generations\": [[{\"text\": \"\", \"generation_info\": {\"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ChatGeneration\", \"message\": {\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"call_zfZ9kQ9q3qPBBHeZU7gq2wFJ\", \"function\": {\"arguments\": \"{\\\"intent\\\":\\\"create a recipe for white bread for two people\\\"}\", \"name\": \"create_recipe_from_intent_tool\"}, \"type\": \"function\"}], \"refusal\": null}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 27, \"prompt_tokens\": 864, \"total_tokens\": 891, \"completion_tokens_details\": {\"accepted_prediction_tokens\": 0, \"audio_tokens\": 0, \"reasoning_tokens\": 0, \"rejected_prediction_tokens\": 0}, \"prompt_tokens_details\": {\"audio_tokens\": 0, \"cached_tokens\": 0}}, \"model_name\": \"gpt-4o-mini-2024-07-18\", \"system_fingerprint\": \"fp_06737a9306\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run-d4f74917-02e0-4198-b12a-5a3821468204-0\"}}]], \"llm_output\": {\"token_usage\": {\"completion_tokens\": 27, \"prompt_tokens\": 864, \"total_tokens\": 891, \"completion_tokens_details\": {\"accepted_prediction_tokens\": 0, \"audio_tokens\": 0, \"reasoning_tokens\": 0, \"rejected_prediction_tokens\": 0}, \"prompt_tokens_details\": {\"audio_tokens\": 0, \"cached_tokens\": 0}}, \"model_name\": \"gpt-4o-mini-2024-07-18\", \"system_fingerprint\": \"fp_06737a9306\"}, \"run\": null, \"type\": \"LLMResult\"}"}, "events": []}, {"name": "ChannelWrite<...,agent>", "context": {"span_id": "0x66c41d190641378e", "trace_id": "0xb03d91058d78089b71e3fce62ee4c8e6"}, "parent_id": "0xe463a66b0c4b84b8", "start_time": 1740987801038163000, "end_time": 1740987801038630000, "status_code": "OK", "status_message": "", "attributes": {"mlflow.traceRequestId": "\"d738b92288744b13936667fc5c4ab62c\"", "mlflow.spanType": "\"CHAIN\"", "metadata": "{\"langgraph_step\": 1, \"langgraph_node\": \"agent\", \"langgraph_triggers\": [\"start:agent\"], \"langgraph_path\": [\"__pregel_pull\", \"agent\"], \"langgraph_checkpoint_ns\": \"agent:fbb65873-47fe-783e-8c99-a605b4f48da3\"}", "mlflow.spanInputs": "{\"messages\": [{\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"call_zfZ9kQ9q3qPBBHeZU7gq2wFJ\", \"function\": {\"arguments\": \"{\\\"intent\\\":\\\"create a recipe for white bread for two people\\\"}\", \"name\": \"create_recipe_from_intent_tool\"}, \"type\": \"function\"}], \"refusal\": null}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 27, \"prompt_tokens\": 864, \"total_tokens\": 891, \"completion_tokens_details\": {\"accepted_prediction_tokens\": 0, \"audio_tokens\": 0, \"reasoning_tokens\": 0, \"rejected_prediction_tokens\": 0}, \"prompt_tokens_details\": {\"audio_tokens\": 0, \"cached_tokens\": 0}}, \"model_name\": \"gpt-4o-mini-2024-07-18\", \"system_fingerprint\": \"fp_06737a9306\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run-d4f74917-02e0-4198-b12a-5a3821468204-0\", \"example\": false, \"tool_calls\": [{\"name\": \"create_recipe_from_intent_tool\", \"args\": {\"intent\": \"create a recipe for white bread for two people\"}, \"id\": \"call_zfZ9kQ9q3qPBBHeZU7gq2wFJ\", \"type\": \"tool_call\"}], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 864, \"output_tokens\": 27, \"total_tokens\": 891, \"input_token_details\": {\"audio\": 0, \"cache_read\": 0}, \"output_token_details\": {\"audio\": 0, \"reasoning\": 0}}}]}", "mlflow.spanOutputs": "{\"messages\": [{\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"call_zfZ9kQ9q3qPBBHeZU7gq2wFJ\", \"function\": {\"arguments\": \"{\\\"intent\\\":\\\"create a recipe for white bread for two people\\\"}\", \"name\": \"create_recipe_from_intent_tool\"}, \"type\": \"function\"}], \"refusal\": null}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 27, \"prompt_tokens\": 864, \"total_tokens\": 891, \"completion_tokens_details\": {\"accepted_prediction_tokens\": 0, \"audio_tokens\": 0, \"reasoning_tokens\": 0, \"rejected_prediction_tokens\": 0}, \"prompt_tokens_details\": {\"audio_tokens\": 0, \"cached_tokens\": 0}}, \"model_name\": \"gpt-4o-mini-2024-07-18\", \"system_fingerprint\": \"fp_06737a9306\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run-d4f74917-02e0-4198-b12a-5a3821468204-0\", \"example\": false, \"tool_calls\": [{\"name\": \"create_recipe_from_intent_tool\", \"args\": {\"intent\": \"create a recipe for white bread for two people\"}, \"id\": \"call_zfZ9kQ9q3qPBBHeZU7gq2wFJ\", \"type\": \"tool_call\"}], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 864, \"output_tokens\": 27, \"total_tokens\": 891, \"input_token_details\": {\"audio\": 0, \"cache_read\": 0}, \"output_token_details\": {\"audio\": 0, \"reasoning\": 0}}}]}"}, "events": []}, {"name": "should_continue", "context": {"span_id": "0x715b331afa5b4772", "trace_id": "0xb03d91058d78089b71e3fce62ee4c8e6"}, "parent_id": "0xe463a66b0c4b84b8", "start_time": 1740987801039197000, "end_time": 1740987801039406000, "status_code": "OK", "status_message": "", "attributes": {"mlflow.traceRequestId": "\"d738b92288744b13936667fc5c4ab62c\"", "mlflow.spanType": "\"CHAIN\"", "metadata": "{\"langgraph_step\": 1, \"langgraph_node\": \"agent\", \"langgraph_triggers\": [\"start:agent\"], \"langgraph_path\": [\"__pregel_pull\", \"agent\"], \"langgraph_checkpoint_ns\": \"agent:fbb65873-47fe-783e-8c99-a605b4f48da3\"}", "mlflow.spanInputs": "{\"messages\": [{\"content\": \"hi give me a recipe for bread for two people white bread specifically\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"2d237bf9-b4e8-4564-bd66-a7906c8c11bb\", \"example\": false}, {\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"call_zfZ9kQ9q3qPBBHeZU7gq2wFJ\", \"function\": {\"arguments\": \"{\\\"intent\\\":\\\"create a recipe for white bread for two people\\\"}\", \"name\": \"create_recipe_from_intent_tool\"}, \"type\": \"function\"}], \"refusal\": null}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 27, \"prompt_tokens\": 864, \"total_tokens\": 891, \"completion_tokens_details\": {\"accepted_prediction_tokens\": 0, \"audio_tokens\": 0, \"reasoning_tokens\": 0, \"rejected_prediction_tokens\": 0}, \"prompt_tokens_details\": {\"audio_tokens\": 0, \"cached_tokens\": 0}}, \"model_name\": \"gpt-4o-mini-2024-07-18\", \"system_fingerprint\": \"fp_06737a9306\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run-d4f74917-02e0-4198-b12a-5a3821468204-0\", \"example\": false, \"tool_calls\": [{\"name\": \"create_recipe_from_intent_tool\", \"args\": {\"intent\": \"create a recipe for white bread for two people\"}, \"id\": \"call_zfZ9kQ9q3qPBBHeZU7gq2wFJ\", \"type\": \"tool_call\"}], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 864, \"output_tokens\": 27, \"total_tokens\": 891, \"input_token_details\": {\"audio\": 0, \"cache_read\": 0}, \"output_token_details\": {\"audio\": 0, \"reasoning\": 0}}}]}", "mlflow.spanOutputs": "\"continue\""}, "events": []}, {"name": "tools", "context": {"span_id": "0xb4e536e8289ced04", "trace_id": "0xb03d91058d78089b71e3fce62ee4c8e6"}, "parent_id": "0xce130d3f7b8c0e61", "start_time": 1740987801040354000, "end_time": 1740987867099528000, "status_code": "ERROR", "status_message": "", "attributes": {"mlflow.traceRequestId": "\"d738b92288744b13936667fc5c4ab62c\"", "mlflow.spanType": "\"CHAIN\"", "metadata": "{\"langgraph_step\": 2, \"langgraph_node\": \"tools\", \"langgraph_triggers\": [\"branch:agent:should_continue:tools\"], \"langgraph_path\": [\"__pregel_pull\", \"tools\"], \"langgraph_checkpoint_ns\": \"tools:c2e6e7fa-aa5d-e10a-9928-94ea7947ff7f\"}", "mlflow.spanInputs": "{\"messages\": [{\"content\": \"hi give me a recipe for bread for two people white bread specifically\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"2d237bf9-b4e8-4564-bd66-a7906c8c11bb\", \"example\": false}, {\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"call_zfZ9kQ9q3qPBBHeZU7gq2wFJ\", \"function\": {\"arguments\": \"{\\\"intent\\\":\\\"create a recipe for white bread for two people\\\"}\", \"name\": \"create_recipe_from_intent_tool\"}, \"type\": \"function\"}], \"refusal\": null}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 27, \"prompt_tokens\": 864, \"total_tokens\": 891, \"completion_tokens_details\": {\"accepted_prediction_tokens\": 0, \"audio_tokens\": 0, \"reasoning_tokens\": 0, \"rejected_prediction_tokens\": 0}, \"prompt_tokens_details\": {\"audio_tokens\": 0, \"cached_tokens\": 0}}, \"model_name\": \"gpt-4o-mini-2024-07-18\", \"system_fingerprint\": \"fp_06737a9306\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run-d4f74917-02e0-4198-b12a-5a3821468204-0\", \"example\": false, \"tool_calls\": [{\"name\": \"create_recipe_from_intent_tool\", \"args\": {\"intent\": \"create a recipe for white bread for two people\"}, \"id\": \"call_zfZ9kQ9q3qPBBHeZU7gq2wFJ\", \"type\": \"tool_call\"}], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 864, \"output_tokens\": 27, \"total_tokens\": 891, \"input_token_details\": {\"audio\": 0, \"cache_read\": 0}, \"output_token_details\": {\"audio\": 0, \"reasoning\": 0}}}]}"}, "events": [{"name": "exception", "timestamp": 1740987867099496, "attributes": {"exception.message": "", "exception.type": "KeyboardInterrupt", "exception.stacktrace": "KeyboardInterrupt()Traceback (most recent call last):\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langgraph/utils/runnable.py\", line 462, in invoke\n    input = step.invoke(input, config, **kwargs)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 592, in safe_patch_function\n    patch_function(call_original, *args, **kwargs)\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 74, in patched_inference\n    result = _invoke(self, *args, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 66, in _invoke\n    return original(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 573, in call_original\n    return call_original_fn_with_event_logging(_original_fn, og_args, og_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 508, in call_original_fn_with_event_logging\n    original_fn_result = original_fn(*og_args, **og_kwargs)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 570, in _original_fn\n    original_result = original(*_og_args, **_og_kwargs)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langgraph/utils/runnable.py\", line 226, in invoke\n    ret = context.run(self.func, *args, **kwargs)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/cookbot/src/langraph_utils.py\", line 27, in tool_node\n    tool_result = tools_by_name[tool_call[\"name\"]].invoke(tool_call[\"args\"])\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 592, in safe_patch_function\n    patch_function(call_original, *args, **kwargs)\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 74, in patched_inference\n    result = _invoke(self, *args, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 66, in _invoke\n    return original(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 573, in call_original\n    return call_original_fn_with_event_logging(_original_fn, og_args, og_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 508, in call_original_fn_with_event_logging\n    original_fn_result = original_fn(*og_args, **og_kwargs)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 570, in _original_fn\n    original_result = original(*_og_args, **_og_kwargs)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/tools/base.py\", line 484, in invoke\n    return self.run(tool_input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/tools/base.py\", line 725, in run\n    raise error_to_raise\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/tools/base.py\", line 693, in run\n    response = context.run(self._run, *tool_args, **tool_kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/tools/structured.py\", line 80, in _run\n    return self.func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/cookbot/src/tools.py\", line 247, in create_recipe_from_intent_tool\n    result = create_recipe_from_intent(intent)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/cookbot/src/tool_functions.py\", line 117, in create_recipe_from_intent\n    recipe = chain.invoke({\n             ^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 592, in safe_patch_function\n    patch_function(call_original, *args, **kwargs)\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 74, in patched_inference\n    result = _invoke(self, *args, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 66, in _invoke\n    return original(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 573, in call_original\n    return call_original_fn_with_event_logging(_original_fn, og_args, og_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 508, in call_original_fn_with_event_logging\n    original_fn_result = original_fn(*og_args, **og_kwargs)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 570, in _original_fn\n    original_result = original(*_og_args, **_og_kwargs)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/runnables/base.py\", line 3022, in invoke\n    input = context.run(step.invoke, input, config)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 592, in safe_patch_function\n    patch_function(call_original, *args, **kwargs)\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 74, in patched_inference\n    result = _invoke(self, *args, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 66, in _invoke\n    return original(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 573, in call_original\n    return call_original_fn_with_event_logging(_original_fn, og_args, og_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 508, in call_original_fn_with_event_logging\n    original_fn_result = original_fn(*og_args, **og_kwargs)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 570, in _original_fn\n    original_result = original(*_og_args, **_og_kwargs)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/runnables/base.py\", line 5352, in invoke\n    return self.bound.invoke(\n           ^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 592, in safe_patch_function\n    patch_function(call_original, *args, **kwargs)\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 74, in patched_inference\n    result = _invoke(self, *args, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 66, in _invoke\n    return original(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 573, in call_original\n    return call_original_fn_with_event_logging(_original_fn, og_args, og_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 508, in call_original_fn_with_event_logging\n    original_fn_result = original_fn(*og_args, **og_kwargs)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 570, in _original_fn\n    original_result = original(*_og_args, **_og_kwargs)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/language_models/chat_models.py\", line 286, in invoke\n    self.generate_prompt(\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/language_models/chat_models.py\", line 790, in generate_prompt\n    return self.generate(prompt_messages, stop=stop, callbacks=callbacks, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/language_models/chat_models.py\", line 647, in generate\n    raise e\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/language_models/chat_models.py\", line 637, in generate\n    self._generate_with_cache(\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/language_models/chat_models.py\", line 855, in _generate_with_cache\n    result = self._generate(\n             ^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_openai/chat_models/base.py\", line 782, in _generate\n    response = self.root_client.beta.chat.completions.parse(**payload)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/openai/resources/beta/chat/completions.py\", line 160, in parse\n    return self._post(\n           ^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/openai/_base_client.py\", line 1283, in post\n    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/openai/_base_client.py\", line 960, in request\n    return self._request(\n           ^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/openai/_base_client.py\", line 996, in _request\n    response = self._client.send(\n               ^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpx/_client.py\", line 914, in send\n    response = self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpx/_client.py\", line 942, in _send_handling_auth\n    response = self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpx/_client.py\", line 979, in _send_handling_redirects\n    response = self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpx/_client.py\", line 1014, in _send_single_request\n    response = transport.handle_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpx/_transports/default.py\", line 250, in handle_request\n    resp = self._pool.handle_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_sync/connection_pool.py\", line 256, in handle_request\n    raise exc from None\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_sync/connection_pool.py\", line 236, in handle_request\n    response = connection.handle_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_sync/connection.py\", line 103, in handle_request\n    return self._connection.handle_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_sync/http11.py\", line 136, in handle_request\n    raise exc\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_sync/http11.py\", line 106, in handle_request\n    ) = self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_sync/http11.py\", line 177, in _receive_response_headers\n    event = self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_sync/http11.py\", line 217, in _receive_event\n    data = self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_backends/sync.py\", line 128, in read\n    return self._sock.recv(max_bytes)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/ssl.py\", line 1295, in recv\n    return self.read(buflen)\n           ^^^^^^^^^^^^^^^^^\n\n\n  File \"/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/ssl.py\", line 1168, in read\n    return self._sslobj.read(len)\n           ^^^^^^^^^^^^^^^^^^^^^^\n\n\nKeyboardInterrupt"}}]}, {"name": "create_recipe_from_intent_tool", "context": {"span_id": "0xd0f7bb7534220ca4", "trace_id": "0xb03d91058d78089b71e3fce62ee4c8e6"}, "parent_id": "0xb4e536e8289ced04", "start_time": 1740987801041470000, "end_time": 1740987867097276000, "status_code": "ERROR", "status_message": "", "attributes": {"mlflow.traceRequestId": "\"d738b92288744b13936667fc5c4ab62c\"", "mlflow.spanType": "\"TOOL\"", "color": "\"green\"", "metadata": "{\"langgraph_step\": 2, \"langgraph_node\": \"tools\", \"langgraph_triggers\": [\"branch:agent:should_continue:tools\"], \"langgraph_path\": [\"__pregel_pull\", \"tools\"], \"langgraph_checkpoint_ns\": \"tools:c2e6e7fa-aa5d-e10a-9928-94ea7947ff7f\", \"checkpoint_ns\": \"tools:c2e6e7fa-aa5d-e10a-9928-94ea7947ff7f\"}", "mlflow.spanInputs": "{\"intent\": \"create a recipe for white bread for two people\"}"}, "events": [{"name": "exception", "timestamp": 1740987867097206, "attributes": {"exception.message": "", "exception.type": "KeyboardInterrupt", "exception.stacktrace": "KeyboardInterrupt()Traceback (most recent call last):\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/tools/base.py\", line 693, in run\n    response = context.run(self._run, *tool_args, **tool_kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/tools/structured.py\", line 80, in _run\n    return self.func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/cookbot/src/tools.py\", line 247, in create_recipe_from_intent_tool\n    result = create_recipe_from_intent(intent)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/cookbot/src/tool_functions.py\", line 117, in create_recipe_from_intent\n    recipe = chain.invoke({\n             ^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 592, in safe_patch_function\n    patch_function(call_original, *args, **kwargs)\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 74, in patched_inference\n    result = _invoke(self, *args, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 66, in _invoke\n    return original(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 573, in call_original\n    return call_original_fn_with_event_logging(_original_fn, og_args, og_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 508, in call_original_fn_with_event_logging\n    original_fn_result = original_fn(*og_args, **og_kwargs)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 570, in _original_fn\n    original_result = original(*_og_args, **_og_kwargs)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/runnables/base.py\", line 3022, in invoke\n    input = context.run(step.invoke, input, config)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 592, in safe_patch_function\n    patch_function(call_original, *args, **kwargs)\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 74, in patched_inference\n    result = _invoke(self, *args, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 66, in _invoke\n    return original(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 573, in call_original\n    return call_original_fn_with_event_logging(_original_fn, og_args, og_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 508, in call_original_fn_with_event_logging\n    original_fn_result = original_fn(*og_args, **og_kwargs)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 570, in _original_fn\n    original_result = original(*_og_args, **_og_kwargs)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/runnables/base.py\", line 5352, in invoke\n    return self.bound.invoke(\n           ^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 592, in safe_patch_function\n    patch_function(call_original, *args, **kwargs)\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 74, in patched_inference\n    result = _invoke(self, *args, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 66, in _invoke\n    return original(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 573, in call_original\n    return call_original_fn_with_event_logging(_original_fn, og_args, og_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 508, in call_original_fn_with_event_logging\n    original_fn_result = original_fn(*og_args, **og_kwargs)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 570, in _original_fn\n    original_result = original(*_og_args, **_og_kwargs)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/language_models/chat_models.py\", line 286, in invoke\n    self.generate_prompt(\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/language_models/chat_models.py\", line 790, in generate_prompt\n    return self.generate(prompt_messages, stop=stop, callbacks=callbacks, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/language_models/chat_models.py\", line 647, in generate\n    raise e\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/language_models/chat_models.py\", line 637, in generate\n    self._generate_with_cache(\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/language_models/chat_models.py\", line 855, in _generate_with_cache\n    result = self._generate(\n             ^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_openai/chat_models/base.py\", line 782, in _generate\n    response = self.root_client.beta.chat.completions.parse(**payload)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/openai/resources/beta/chat/completions.py\", line 160, in parse\n    return self._post(\n           ^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/openai/_base_client.py\", line 1283, in post\n    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/openai/_base_client.py\", line 960, in request\n    return self._request(\n           ^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/openai/_base_client.py\", line 996, in _request\n    response = self._client.send(\n               ^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpx/_client.py\", line 914, in send\n    response = self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpx/_client.py\", line 942, in _send_handling_auth\n    response = self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpx/_client.py\", line 979, in _send_handling_redirects\n    response = self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpx/_client.py\", line 1014, in _send_single_request\n    response = transport.handle_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpx/_transports/default.py\", line 250, in handle_request\n    resp = self._pool.handle_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_sync/connection_pool.py\", line 256, in handle_request\n    raise exc from None\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_sync/connection_pool.py\", line 236, in handle_request\n    response = connection.handle_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_sync/connection.py\", line 103, in handle_request\n    return self._connection.handle_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_sync/http11.py\", line 136, in handle_request\n    raise exc\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_sync/http11.py\", line 106, in handle_request\n    ) = self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_sync/http11.py\", line 177, in _receive_response_headers\n    event = self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_sync/http11.py\", line 217, in _receive_event\n    data = self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_backends/sync.py\", line 128, in read\n    return self._sock.recv(max_bytes)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/ssl.py\", line 1295, in recv\n    return self.read(buflen)\n           ^^^^^^^^^^^^^^^^^\n\n\n  File \"/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/ssl.py\", line 1168, in read\n    return self._sslobj.read(len)\n           ^^^^^^^^^^^^^^^^^^^^^^\n\n\nKeyboardInterrupt"}}]}, {"name": "RunnableSequence", "context": {"span_id": "0x1263072e84bb3843", "trace_id": "0xb03d91058d78089b71e3fce62ee4c8e6"}, "parent_id": "0xd0f7bb7534220ca4", "start_time": 1740987801088076000, "end_time": 1740987867095864000, "status_code": "ERROR", "status_message": "", "attributes": {"mlflow.traceRequestId": "\"d738b92288744b13936667fc5c4ab62c\"", "mlflow.spanType": "\"CHAIN\"", "metadata": "{\"langgraph_step\": 2, \"langgraph_node\": \"tools\", \"langgraph_triggers\": [\"branch:agent:should_continue:tools\"], \"langgraph_path\": [\"__pregel_pull\", \"tools\"], \"langgraph_checkpoint_ns\": \"tools:c2e6e7fa-aa5d-e10a-9928-94ea7947ff7f\", \"checkpoint_ns\": \"tools:c2e6e7fa-aa5d-e10a-9928-94ea7947ff7f\"}", "mlflow.spanInputs": "{\"intent\": \"create a recipe for white bread for two people\", \"json_schema\": {\"properties\": {\"ingredients\": {\"description\": \"List of ingredient names.\", \"items\": {\"type\": \"string\"}, \"title\": \"Ingredients\", \"type\": \"array\"}, \"quantities\": {\"description\": \"List of quantities for each ingredient\", \"items\": {\"anyOf\": [{\"type\": \"number\"}, {\"type\": \"integer\"}]}, \"title\": \"Quantities\", \"type\": \"array\"}, \"units\": {\"description\": \"List of units corresponding to each quantity\", \"items\": {\"type\": \"string\"}, \"title\": \"Units\", \"type\": \"array\"}, \"steps\": {\"description\": \"Ordered list of recipe preparation steps\", \"items\": {\"type\": \"string\"}, \"title\": \"Steps\", \"type\": \"array\"}, \"number_of_people\": {\"description\": \"Number of people the recipe is for\", \"title\": \"Number Of People\", \"type\": \"integer\"}}, \"required\": [\"ingredients\", \"quantities\", \"units\", \"steps\", \"number_of_people\"], \"title\": \"Recipe\", \"type\": \"object\"}}"}, "events": [{"name": "exception", "timestamp": 1740987867095810, "attributes": {"exception.message": "", "exception.type": "KeyboardInterrupt", "exception.stacktrace": "KeyboardInterrupt()Traceback (most recent call last):\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/runnables/base.py\", line 3022, in invoke\n    input = context.run(step.invoke, input, config)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 592, in safe_patch_function\n    patch_function(call_original, *args, **kwargs)\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 74, in patched_inference\n    result = _invoke(self, *args, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 66, in _invoke\n    return original(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 573, in call_original\n    return call_original_fn_with_event_logging(_original_fn, og_args, og_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 508, in call_original_fn_with_event_logging\n    original_fn_result = original_fn(*og_args, **og_kwargs)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 570, in _original_fn\n    original_result = original(*_og_args, **_og_kwargs)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/runnables/base.py\", line 5352, in invoke\n    return self.bound.invoke(\n           ^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 592, in safe_patch_function\n    patch_function(call_original, *args, **kwargs)\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 74, in patched_inference\n    result = _invoke(self, *args, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 66, in _invoke\n    return original(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 573, in call_original\n    return call_original_fn_with_event_logging(_original_fn, og_args, og_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 508, in call_original_fn_with_event_logging\n    original_fn_result = original_fn(*og_args, **og_kwargs)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 570, in _original_fn\n    original_result = original(*_og_args, **_og_kwargs)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/language_models/chat_models.py\", line 286, in invoke\n    self.generate_prompt(\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/language_models/chat_models.py\", line 790, in generate_prompt\n    return self.generate(prompt_messages, stop=stop, callbacks=callbacks, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/language_models/chat_models.py\", line 647, in generate\n    raise e\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/language_models/chat_models.py\", line 637, in generate\n    self._generate_with_cache(\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/language_models/chat_models.py\", line 855, in _generate_with_cache\n    result = self._generate(\n             ^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_openai/chat_models/base.py\", line 782, in _generate\n    response = self.root_client.beta.chat.completions.parse(**payload)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/openai/resources/beta/chat/completions.py\", line 160, in parse\n    return self._post(\n           ^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/openai/_base_client.py\", line 1283, in post\n    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/openai/_base_client.py\", line 960, in request\n    return self._request(\n           ^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/openai/_base_client.py\", line 996, in _request\n    response = self._client.send(\n               ^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpx/_client.py\", line 914, in send\n    response = self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpx/_client.py\", line 942, in _send_handling_auth\n    response = self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpx/_client.py\", line 979, in _send_handling_redirects\n    response = self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpx/_client.py\", line 1014, in _send_single_request\n    response = transport.handle_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpx/_transports/default.py\", line 250, in handle_request\n    resp = self._pool.handle_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_sync/connection_pool.py\", line 256, in handle_request\n    raise exc from None\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_sync/connection_pool.py\", line 236, in handle_request\n    response = connection.handle_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_sync/connection.py\", line 103, in handle_request\n    return self._connection.handle_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_sync/http11.py\", line 136, in handle_request\n    raise exc\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_sync/http11.py\", line 106, in handle_request\n    ) = self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_sync/http11.py\", line 177, in _receive_response_headers\n    event = self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_sync/http11.py\", line 217, in _receive_event\n    data = self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_backends/sync.py\", line 128, in read\n    return self._sock.recv(max_bytes)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/ssl.py\", line 1295, in recv\n    return self.read(buflen)\n           ^^^^^^^^^^^^^^^^^\n\n\n  File \"/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/ssl.py\", line 1168, in read\n    return self._sslobj.read(len)\n           ^^^^^^^^^^^^^^^^^^^^^^\n\n\nKeyboardInterrupt"}}]}, {"name": "ChatPromptTemplate", "context": {"span_id": "0xe0c72999102c8b93", "trace_id": "0xb03d91058d78089b71e3fce62ee4c8e6"}, "parent_id": "0x1263072e84bb3843", "start_time": 1740987801089224000, "end_time": 1740987801089799000, "status_code": "OK", "status_message": "", "attributes": {"mlflow.traceRequestId": "\"d738b92288744b13936667fc5c4ab62c\"", "mlflow.spanType": "\"CHAIN\"", "metadata": "{\"langgraph_step\": 2, \"langgraph_node\": \"tools\", \"langgraph_triggers\": [\"branch:agent:should_continue:tools\"], \"langgraph_path\": [\"__pregel_pull\", \"tools\"], \"langgraph_checkpoint_ns\": \"tools:c2e6e7fa-aa5d-e10a-9928-94ea7947ff7f\", \"checkpoint_ns\": \"tools:c2e6e7fa-aa5d-e10a-9928-94ea7947ff7f\"}", "mlflow.spanInputs": "{\"intent\": \"create a recipe for white bread for two people\", \"json_schema\": {\"properties\": {\"ingredients\": {\"description\": \"List of ingredient names.\", \"items\": {\"type\": \"string\"}, \"title\": \"Ingredients\", \"type\": \"array\"}, \"quantities\": {\"description\": \"List of quantities for each ingredient\", \"items\": {\"anyOf\": [{\"type\": \"number\"}, {\"type\": \"integer\"}]}, \"title\": \"Quantities\", \"type\": \"array\"}, \"units\": {\"description\": \"List of units corresponding to each quantity\", \"items\": {\"type\": \"string\"}, \"title\": \"Units\", \"type\": \"array\"}, \"steps\": {\"description\": \"Ordered list of recipe preparation steps\", \"items\": {\"type\": \"string\"}, \"title\": \"Steps\", \"type\": \"array\"}, \"number_of_people\": {\"description\": \"Number of people the recipe is for\", \"title\": \"Number Of People\", \"type\": \"integer\"}}, \"required\": [\"ingredients\", \"quantities\", \"units\", \"steps\", \"number_of_people\"], \"title\": \"Recipe\", \"type\": \"object\"}}", "mlflow.spanOutputs": "{\"messages\": [{\"content\": \"\\nGiven the following intent, create a recipe in JSON format.\\n\\nThe recipe must match closely anything specified in the intent, the ingredients and steps must be as close as possible to the intent, the quantities must be standard quantities.\\nReview the recipe and make sure it is correct. Clearly define the quantities and for how many people the recipe is for, infer the number of people from the quantities if not specified.\\nIf the intent is not clear, ask remember to guess what the user wants and output the recipe with all the information required.\\n\\nIntent: create a recipe for white bread for two people\\nReturn your answer in the following JSON format:\\n{'properties': {'ingredients': {'description': 'List of ingredient names.', 'items': {'type': 'string'}, 'title': 'Ingredients', 'type': 'array'}, 'quantities': {'description': 'List of quantities for each ingredient', 'items': {'anyOf': [{'type': 'number'}, {'type': 'integer'}]}, 'title': 'Quantities', 'type': 'array'}, 'units': {'description': 'List of units corresponding to each quantity', 'items': {'type': 'string'}, 'title': 'Units', 'type': 'array'}, 'steps': {'description': 'Ordered list of recipe preparation steps', 'items': {'type': 'string'}, 'title': 'Steps', 'type': 'array'}, 'number_of_people': {'description': 'Number of people the recipe is for', 'title': 'Number Of People', 'type': 'integer'}}, 'required': ['ingredients', 'quantities', 'units', 'steps', 'number_of_people'], 'title': 'Recipe', 'type': 'object'}\\n\\n\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": null}]}"}, "events": []}, {"name": "ChatOpenAI_2", "context": {"span_id": "0x9902000220d01bad", "trace_id": "0xb03d91058d78089b71e3fce62ee4c8e6"}, "parent_id": "0x1263072e84bb3843", "start_time": 1740987801090991000, "end_time": 1740987867092942000, "status_code": "ERROR", "status_message": "", "attributes": {"mlflow.traceRequestId": "\"d738b92288744b13936667fc5c4ab62c\"", "mlflow.spanType": "\"CHAT_MODEL\"", "invocation_params": "{\"model\": \"gpt-4o-mini\", \"model_name\": \"gpt-4o-mini\", \"stream\": false, \"_type\": \"openai-chat\", \"stop\": null, \"response_format\": {\"type\": \"json_object\"}}", "options": "{\"stop\": null}", "batch_size": "1", "metadata": "{\"langgraph_step\": 2, \"langgraph_node\": \"tools\", \"langgraph_triggers\": [\"branch:agent:should_continue:tools\"], \"langgraph_path\": [\"__pregel_pull\", \"tools\"], \"langgraph_checkpoint_ns\": \"tools:c2e6e7fa-aa5d-e10a-9928-94ea7947ff7f\", \"checkpoint_ns\": \"tools:c2e6e7fa-aa5d-e10a-9928-94ea7947ff7f\", \"ls_provider\": \"openai\", \"ls_model_name\": \"gpt-4o-mini\", \"ls_model_type\": \"chat\", \"ls_temperature\": null}", "mlflow.spanInputs": "[[{\"content\": \"\\nGiven the following intent, create a recipe in JSON format.\\n\\nThe recipe must match closely anything specified in the intent, the ingredients and steps must be as close as possible to the intent, the quantities must be standard quantities.\\nReview the recipe and make sure it is correct. Clearly define the quantities and for how many people the recipe is for, infer the number of people from the quantities if not specified.\\nIf the intent is not clear, ask remember to guess what the user wants and output the recipe with all the information required.\\n\\nIntent: create a recipe for white bread for two people\\nReturn your answer in the following JSON format:\\n{'properties': {'ingredients': {'description': 'List of ingredient names.', 'items': {'type': 'string'}, 'title': 'Ingredients', 'type': 'array'}, 'quantities': {'description': 'List of quantities for each ingredient', 'items': {'anyOf': [{'type': 'number'}, {'type': 'integer'}]}, 'title': 'Quantities', 'type': 'array'}, 'units': {'description': 'List of units corresponding to each quantity', 'items': {'type': 'string'}, 'title': 'Units', 'type': 'array'}, 'steps': {'description': 'Ordered list of recipe preparation steps', 'items': {'type': 'string'}, 'title': 'Steps', 'type': 'array'}, 'number_of_people': {'description': 'Number of people the recipe is for', 'title': 'Number Of People', 'type': 'integer'}}, 'required': ['ingredients', 'quantities', 'units', 'steps', 'number_of_people'], 'title': 'Recipe', 'type': 'object'}\\n\\n\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": null, \"example\": false}]]", "mlflow.chat.messages": "[{\"role\": \"user\", \"content\": \"\\nGiven the following intent, create a recipe in JSON format.\\n\\nThe recipe must match closely anything specified in the intent, the ingredients and steps must be as close as possible to the intent, the quantities must be standard quantities.\\nReview the recipe and make sure it is correct. Clearly define the quantities and for how many people the recipe is for, infer the number of people from the quantities if not specified.\\nIf the intent is not clear, ask remember to guess what the user wants and output the recipe with all the information required.\\n\\nIntent: create a recipe for white bread for two people\\nReturn your answer in the following JSON format:\\n{'properties': {'ingredients': {'description': 'List of ingredient names.', 'items': {'type': 'string'}, 'title': 'Ingredients', 'type': 'array'}, 'quantities': {'description': 'List of quantities for each ingredient', 'items': {'anyOf': [{'type': 'number'}, {'type': 'integer'}]}, 'title': 'Quantities', 'type': 'array'}, 'units': {'description': 'List of units corresponding to each quantity', 'items': {'type': 'string'}, 'title': 'Units', 'type': 'array'}, 'steps': {'description': 'Ordered list of recipe preparation steps', 'items': {'type': 'string'}, 'title': 'Steps', 'type': 'array'}, 'number_of_people': {'description': 'Number of people the recipe is for', 'title': 'Number Of People', 'type': 'integer'}}, 'required': ['ingredients', 'quantities', 'units', 'steps', 'number_of_people'], 'title': 'Recipe', 'type': 'object'}\\n\\n\"}]"}, "events": [{"name": "exception", "timestamp": 1740987867092862, "attributes": {"exception.message": "", "exception.type": "KeyboardInterrupt", "exception.stacktrace": "KeyboardInterrupt()Traceback (most recent call last):\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/language_models/chat_models.py\", line 637, in generate\n    self._generate_with_cache(\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/language_models/chat_models.py\", line 855, in _generate_with_cache\n    result = self._generate(\n             ^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_openai/chat_models/base.py\", line 782, in _generate\n    response = self.root_client.beta.chat.completions.parse(**payload)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/openai/resources/beta/chat/completions.py\", line 160, in parse\n    return self._post(\n           ^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/openai/_base_client.py\", line 1283, in post\n    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/openai/_base_client.py\", line 960, in request\n    return self._request(\n           ^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/openai/_base_client.py\", line 996, in _request\n    response = self._client.send(\n               ^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpx/_client.py\", line 914, in send\n    response = self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpx/_client.py\", line 942, in _send_handling_auth\n    response = self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpx/_client.py\", line 979, in _send_handling_redirects\n    response = self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpx/_client.py\", line 1014, in _send_single_request\n    response = transport.handle_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpx/_transports/default.py\", line 250, in handle_request\n    resp = self._pool.handle_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_sync/connection_pool.py\", line 256, in handle_request\n    raise exc from None\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_sync/connection_pool.py\", line 236, in handle_request\n    response = connection.handle_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_sync/connection.py\", line 103, in handle_request\n    return self._connection.handle_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_sync/http11.py\", line 136, in handle_request\n    raise exc\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_sync/http11.py\", line 106, in handle_request\n    ) = self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_sync/http11.py\", line 177, in _receive_response_headers\n    event = self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_sync/http11.py\", line 217, in _receive_event\n    data = self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/httpcore/_backends/sync.py\", line 128, in read\n    return self._sock.recv(max_bytes)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/ssl.py\", line 1295, in recv\n    return self.read(buflen)\n           ^^^^^^^^^^^^^^^^^\n\n\n  File \"/opt/homebrew/Cellar/python@3.11/3.11.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/ssl.py\", line 1168, in read\n    return self._sslobj.read(len)\n           ^^^^^^^^^^^^^^^^^^^^^^\n\n\nKeyboardInterrupt"}}]}], "request": "{\"messages\": [[\"user\", \"hi give me a recipe for bread for two people white bread specifically\"]]}", "response": null}