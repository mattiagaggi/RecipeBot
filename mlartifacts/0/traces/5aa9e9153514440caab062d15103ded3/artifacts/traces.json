{"spans": [{"name": "LangGraph", "context": {"span_id": "0xb72e41a22abdbd14", "trace_id": "0x1f3bea1c1fd91ae08467120538bead0b"}, "parent_id": null, "start_time": 1740985536128936000, "end_time": 1740985550184252000, "status_code": "ERROR", "status_message": "'Recipe' object has no attribute 'title'", "attributes": {"mlflow.traceRequestId": "\"5aa9e9153514440caab062d15103ded3\"", "mlflow.spanType": "\"CHAIN\"", "mlflow.spanInputs": "{\"messages\": [{\"content\": \"hey\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"18a52c4f-122b-434d-afec-be6415de5879\", \"example\": false}, {\"content\": \"Hello! How can I assist you with your cooking needs today?\", \"additional_kwargs\": {\"refusal\": null}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 15, \"prompt_tokens\": 784, \"total_tokens\": 799, \"completion_tokens_details\": {\"accepted_prediction_tokens\": 0, \"audio_tokens\": 0, \"reasoning_tokens\": 0, \"rejected_prediction_tokens\": 0}, \"prompt_tokens_details\": {\"audio_tokens\": 0, \"cached_tokens\": 0}}, \"model_name\": \"gpt-4o-mini-2024-07-18\", \"system_fingerprint\": \"fp_06737a9306\", \"finish_reason\": \"stop\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run-2dd0fb5f-3f01-48f8-9af7-453bc16c8b9f-0\", \"example\": false, \"tool_calls\": [], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 784, \"output_tokens\": 15, \"total_tokens\": 799, \"input_token_details\": {\"audio\": 0, \"cache_read\": 0}, \"output_token_details\": {\"audio\": 0, \"reasoning\": 0}}}, [\"user\", \"can you give me a recipe for bread?\"]]}"}, "events": [{"name": "exception", "timestamp": 1740985550184219, "attributes": {"exception.message": "'Recipe' object has no attribute 'title'", "exception.type": "AttributeError", "exception.stacktrace": "AttributeError(\"'Recipe' object has no attribute 'title'\")Traceback (most recent call last):\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langgraph/pregel/__init__.py\", line 1670, in stream\n    for _ in runner.tick(\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langgraph/pregel/runner.py\", line 230, in tick\n    run_with_retry(\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langgraph/pregel/retry.py\", line 40, in run_with_retry\n    return task.proc.invoke(task.input, config)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 592, in safe_patch_function\n    patch_function(call_original, *args, **kwargs)\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 74, in patched_inference\n    result = _invoke(self, *args, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 66, in _invoke\n    return original(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 573, in call_original\n    return call_original_fn_with_event_logging(_original_fn, og_args, og_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 508, in call_original_fn_with_event_logging\n    original_fn_result = original_fn(*og_args, **og_kwargs)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 570, in _original_fn\n    original_result = original(*_og_args, **_og_kwargs)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langgraph/utils/runnable.py\", line 462, in invoke\n    input = step.invoke(input, config, **kwargs)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 592, in safe_patch_function\n    patch_function(call_original, *args, **kwargs)\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 74, in patched_inference\n    result = _invoke(self, *args, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 66, in _invoke\n    return original(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 573, in call_original\n    return call_original_fn_with_event_logging(_original_fn, og_args, og_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 508, in call_original_fn_with_event_logging\n    original_fn_result = original_fn(*og_args, **og_kwargs)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 570, in _original_fn\n    original_result = original(*_og_args, **_og_kwargs)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langgraph/utils/runnable.py\", line 226, in invoke\n    ret = context.run(self.func, *args, **kwargs)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/cookbot/src/langraph_utils.py\", line 27, in tool_node\n    tool_result = tools_by_name[tool_call[\"name\"]].invoke(tool_call[\"args\"])\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 592, in safe_patch_function\n    patch_function(call_original, *args, **kwargs)\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 74, in patched_inference\n    result = _invoke(self, *args, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 66, in _invoke\n    return original(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 573, in call_original\n    return call_original_fn_with_event_logging(_original_fn, og_args, og_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 508, in call_original_fn_with_event_logging\n    original_fn_result = original_fn(*og_args, **og_kwargs)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 570, in _original_fn\n    original_result = original(*_og_args, **_og_kwargs)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/tools/base.py\", line 484, in invoke\n    return self.run(tool_input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/tools/base.py\", line 725, in run\n    raise error_to_raise\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/tools/base.py\", line 693, in run\n    response = context.run(self._run, *tool_args, **tool_kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/tools/structured.py\", line 80, in _run\n    return self.func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/cookbot/src/tools.py\", line 189, in create_recipe_from_intent_tool\n    mlflow.log_text(json.dumps(result.dict(), indent=2), f\"{tool_name}_output_{call_id}_{result.title}.json\")\n                                                                                         ^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/pydantic/main.py\", line 891, in __getattr__\n    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')\n\n\nAttributeError: 'Recipe' object has no attribute 'title'\n\n\nDuring task with name 'tools' and id '236d826c-3c54-3d12-e9b9-4ed228f82329'"}}]}, {"name": "__start__", "context": {"span_id": "0x07f15b26929359e3", "trace_id": "0x1f3bea1c1fd91ae08467120538bead0b"}, "parent_id": "0xb72e41a22abdbd14", "start_time": 1740985536130081000, "end_time": 1740985536131592000, "status_code": "OK", "status_message": "", "attributes": {"mlflow.traceRequestId": "\"5aa9e9153514440caab062d15103ded3\"", "mlflow.spanType": "\"CHAIN\"", "metadata": "{\"langgraph_step\": 0, \"langgraph_node\": \"__start__\", \"langgraph_triggers\": [\"__start__\"], \"langgraph_path\": [\"__pregel_pull\", \"__start__\"], \"langgraph_checkpoint_ns\": \"__start__:b24c0795-84fd-63a1-97ea-072e27856d72\"}", "mlflow.spanInputs": "{\"messages\": [{\"content\": \"hey\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"18a52c4f-122b-434d-afec-be6415de5879\", \"example\": false}, {\"content\": \"Hello! How can I assist you with your cooking needs today?\", \"additional_kwargs\": {\"refusal\": null}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 15, \"prompt_tokens\": 784, \"total_tokens\": 799, \"completion_tokens_details\": {\"accepted_prediction_tokens\": 0, \"audio_tokens\": 0, \"reasoning_tokens\": 0, \"rejected_prediction_tokens\": 0}, \"prompt_tokens_details\": {\"audio_tokens\": 0, \"cached_tokens\": 0}}, \"model_name\": \"gpt-4o-mini-2024-07-18\", \"system_fingerprint\": \"fp_06737a9306\", \"finish_reason\": \"stop\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run-2dd0fb5f-3f01-48f8-9af7-453bc16c8b9f-0\", \"example\": false, \"tool_calls\": [], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 784, \"output_tokens\": 15, \"total_tokens\": 799, \"input_token_details\": {\"audio\": 0, \"cache_read\": 0}, \"output_token_details\": {\"audio\": 0, \"reasoning\": 0}}}, [\"user\", \"can you give me a recipe for bread?\"]]}", "mlflow.spanOutputs": "{\"messages\": [{\"content\": \"hey\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"18a52c4f-122b-434d-afec-be6415de5879\", \"example\": false}, {\"content\": \"Hello! How can I assist you with your cooking needs today?\", \"additional_kwargs\": {\"refusal\": null}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 15, \"prompt_tokens\": 784, \"total_tokens\": 799, \"completion_tokens_details\": {\"accepted_prediction_tokens\": 0, \"audio_tokens\": 0, \"reasoning_tokens\": 0, \"rejected_prediction_tokens\": 0}, \"prompt_tokens_details\": {\"audio_tokens\": 0, \"cached_tokens\": 0}}, \"model_name\": \"gpt-4o-mini-2024-07-18\", \"system_fingerprint\": \"fp_06737a9306\", \"finish_reason\": \"stop\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run-2dd0fb5f-3f01-48f8-9af7-453bc16c8b9f-0\", \"example\": false, \"tool_calls\": [], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 784, \"output_tokens\": 15, \"total_tokens\": 799, \"input_token_details\": {\"audio\": 0, \"cache_read\": 0}, \"output_token_details\": {\"audio\": 0, \"reasoning\": 0}}}, [\"user\", \"can you give me a recipe for bread?\"]]}"}, "events": []}, {"name": "ChannelWrite<...>", "context": {"span_id": "0x42aeafeece3ed28e", "trace_id": "0x1f3bea1c1fd91ae08467120538bead0b"}, "parent_id": "0x07f15b26929359e3", "start_time": 1740985536130442000, "end_time": 1740985536130768000, "status_code": "OK", "status_message": "", "attributes": {"mlflow.traceRequestId": "\"5aa9e9153514440caab062d15103ded3\"", "mlflow.spanType": "\"CHAIN\"", "metadata": "{\"langgraph_step\": 0, \"langgraph_node\": \"__start__\", \"langgraph_triggers\": [\"__start__\"], \"langgraph_path\": [\"__pregel_pull\", \"__start__\"], \"langgraph_checkpoint_ns\": \"__start__:b24c0795-84fd-63a1-97ea-072e27856d72\"}", "mlflow.spanInputs": "{\"messages\": [{\"content\": \"hey\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"18a52c4f-122b-434d-afec-be6415de5879\", \"example\": false}, {\"content\": \"Hello! How can I assist you with your cooking needs today?\", \"additional_kwargs\": {\"refusal\": null}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 15, \"prompt_tokens\": 784, \"total_tokens\": 799, \"completion_tokens_details\": {\"accepted_prediction_tokens\": 0, \"audio_tokens\": 0, \"reasoning_tokens\": 0, \"rejected_prediction_tokens\": 0}, \"prompt_tokens_details\": {\"audio_tokens\": 0, \"cached_tokens\": 0}}, \"model_name\": \"gpt-4o-mini-2024-07-18\", \"system_fingerprint\": \"fp_06737a9306\", \"finish_reason\": \"stop\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run-2dd0fb5f-3f01-48f8-9af7-453bc16c8b9f-0\", \"example\": false, \"tool_calls\": [], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 784, \"output_tokens\": 15, \"total_tokens\": 799, \"input_token_details\": {\"audio\": 0, \"cache_read\": 0}, \"output_token_details\": {\"audio\": 0, \"reasoning\": 0}}}, [\"user\", \"can you give me a recipe for bread?\"]]}", "mlflow.spanOutputs": "{\"messages\": [{\"content\": \"hey\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"18a52c4f-122b-434d-afec-be6415de5879\", \"example\": false}, {\"content\": \"Hello! How can I assist you with your cooking needs today?\", \"additional_kwargs\": {\"refusal\": null}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 15, \"prompt_tokens\": 784, \"total_tokens\": 799, \"completion_tokens_details\": {\"accepted_prediction_tokens\": 0, \"audio_tokens\": 0, \"reasoning_tokens\": 0, \"rejected_prediction_tokens\": 0}, \"prompt_tokens_details\": {\"audio_tokens\": 0, \"cached_tokens\": 0}}, \"model_name\": \"gpt-4o-mini-2024-07-18\", \"system_fingerprint\": \"fp_06737a9306\", \"finish_reason\": \"stop\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run-2dd0fb5f-3f01-48f8-9af7-453bc16c8b9f-0\", \"example\": false, \"tool_calls\": [], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 784, \"output_tokens\": 15, \"total_tokens\": 799, \"input_token_details\": {\"audio\": 0, \"cache_read\": 0}, \"output_token_details\": {\"audio\": 0, \"reasoning\": 0}}}, [\"user\", \"can you give me a recipe for bread?\"]]}"}, "events": []}, {"name": "ChannelWrite<start:agent>", "context": {"span_id": "0x8b463e9f7ace3022", "trace_id": "0x1f3bea1c1fd91ae08467120538bead0b"}, "parent_id": "0x07f15b26929359e3", "start_time": 1740985536131200000, "end_time": 1740985536131490000, "status_code": "OK", "status_message": "", "attributes": {"mlflow.traceRequestId": "\"5aa9e9153514440caab062d15103ded3\"", "mlflow.spanType": "\"CHAIN\"", "metadata": "{\"langgraph_step\": 0, \"langgraph_node\": \"__start__\", \"langgraph_triggers\": [\"__start__\"], \"langgraph_path\": [\"__pregel_pull\", \"__start__\"], \"langgraph_checkpoint_ns\": \"__start__:b24c0795-84fd-63a1-97ea-072e27856d72\"}", "mlflow.spanInputs": "{\"messages\": [{\"content\": \"hey\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"18a52c4f-122b-434d-afec-be6415de5879\", \"example\": false}, {\"content\": \"Hello! How can I assist you with your cooking needs today?\", \"additional_kwargs\": {\"refusal\": null}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 15, \"prompt_tokens\": 784, \"total_tokens\": 799, \"completion_tokens_details\": {\"accepted_prediction_tokens\": 0, \"audio_tokens\": 0, \"reasoning_tokens\": 0, \"rejected_prediction_tokens\": 0}, \"prompt_tokens_details\": {\"audio_tokens\": 0, \"cached_tokens\": 0}}, \"model_name\": \"gpt-4o-mini-2024-07-18\", \"system_fingerprint\": \"fp_06737a9306\", \"finish_reason\": \"stop\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run-2dd0fb5f-3f01-48f8-9af7-453bc16c8b9f-0\", \"example\": false, \"tool_calls\": [], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 784, \"output_tokens\": 15, \"total_tokens\": 799, \"input_token_details\": {\"audio\": 0, \"cache_read\": 0}, \"output_token_details\": {\"audio\": 0, \"reasoning\": 0}}}, [\"user\", \"can you give me a recipe for bread?\"]]}", "mlflow.spanOutputs": "{\"messages\": [{\"content\": \"hey\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"18a52c4f-122b-434d-afec-be6415de5879\", \"example\": false}, {\"content\": \"Hello! How can I assist you with your cooking needs today?\", \"additional_kwargs\": {\"refusal\": null}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 15, \"prompt_tokens\": 784, \"total_tokens\": 799, \"completion_tokens_details\": {\"accepted_prediction_tokens\": 0, \"audio_tokens\": 0, \"reasoning_tokens\": 0, \"rejected_prediction_tokens\": 0}, \"prompt_tokens_details\": {\"audio_tokens\": 0, \"cached_tokens\": 0}}, \"model_name\": \"gpt-4o-mini-2024-07-18\", \"system_fingerprint\": \"fp_06737a9306\", \"finish_reason\": \"stop\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run-2dd0fb5f-3f01-48f8-9af7-453bc16c8b9f-0\", \"example\": false, \"tool_calls\": [], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 784, \"output_tokens\": 15, \"total_tokens\": 799, \"input_token_details\": {\"audio\": 0, \"cache_read\": 0}, \"output_token_details\": {\"audio\": 0, \"reasoning\": 0}}}, [\"user\", \"can you give me a recipe for bread?\"]]}"}, "events": []}, {"name": "agent", "context": {"span_id": "0x0717fe8b19863581", "trace_id": "0x1f3bea1c1fd91ae08467120538bead0b"}, "parent_id": "0xb72e41a22abdbd14", "start_time": 1740985536132089000, "end_time": 1740985537467964000, "status_code": "OK", "status_message": "", "attributes": {"mlflow.traceRequestId": "\"5aa9e9153514440caab062d15103ded3\"", "mlflow.spanType": "\"CHAIN\"", "metadata": "{\"langgraph_step\": 1, \"langgraph_node\": \"agent\", \"langgraph_triggers\": [\"start:agent\"], \"langgraph_path\": [\"__pregel_pull\", \"agent\"], \"langgraph_checkpoint_ns\": \"agent:ea40994e-6d83-4774-50b6-4e61adeba14a\"}", "mlflow.spanInputs": "{\"messages\": [{\"content\": \"hey\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"18a52c4f-122b-434d-afec-be6415de5879\", \"example\": false}, {\"content\": \"Hello! How can I assist you with your cooking needs today?\", \"additional_kwargs\": {\"refusal\": null}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 15, \"prompt_tokens\": 784, \"total_tokens\": 799, \"completion_tokens_details\": {\"accepted_prediction_tokens\": 0, \"audio_tokens\": 0, \"reasoning_tokens\": 0, \"rejected_prediction_tokens\": 0}, \"prompt_tokens_details\": {\"audio_tokens\": 0, \"cached_tokens\": 0}}, \"model_name\": \"gpt-4o-mini-2024-07-18\", \"system_fingerprint\": \"fp_06737a9306\", \"finish_reason\": \"stop\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run-2dd0fb5f-3f01-48f8-9af7-453bc16c8b9f-0\", \"example\": false, \"tool_calls\": [], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 784, \"output_tokens\": 15, \"total_tokens\": 799, \"input_token_details\": {\"audio\": 0, \"cache_read\": 0}, \"output_token_details\": {\"audio\": 0, \"reasoning\": 0}}}, {\"content\": \"can you give me a recipe for bread?\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"845c1113-d68a-4880-9da9-6fb37e7d40c3\", \"example\": false}]}", "mlflow.spanOutputs": "{\"messages\": [{\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"call_0KlYlmKLyZKHRfYUUQYWCrmk\", \"function\": {\"arguments\": \"{\\\"intent\\\":\\\"recipe for bread\\\"}\", \"name\": \"create_recipe_from_intent_tool\"}, \"type\": \"function\"}], \"refusal\": null}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 21, \"prompt_tokens\": 814, \"total_tokens\": 835, \"completion_tokens_details\": {\"accepted_prediction_tokens\": 0, \"audio_tokens\": 0, \"reasoning_tokens\": 0, \"rejected_prediction_tokens\": 0}, \"prompt_tokens_details\": {\"audio_tokens\": 0, \"cached_tokens\": 0}}, \"model_name\": \"gpt-4o-mini-2024-07-18\", \"system_fingerprint\": \"fp_06737a9306\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run-4e4a1725-e8ce-4386-8394-4edcbfcfdeb8-0\", \"example\": false, \"tool_calls\": [{\"name\": \"create_recipe_from_intent_tool\", \"args\": {\"intent\": \"recipe for bread\"}, \"id\": \"call_0KlYlmKLyZKHRfYUUQYWCrmk\", \"type\": \"tool_call\"}], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 814, \"output_tokens\": 21, \"total_tokens\": 835, \"input_token_details\": {\"audio\": 0, \"cache_read\": 0}, \"output_token_details\": {\"audio\": 0, \"reasoning\": 0}}}]}"}, "events": []}, {"name": "ChatOpenAI_1", "context": {"span_id": "0xc64c9c9477cbc61b", "trace_id": "0x1f3bea1c1fd91ae08467120538bead0b"}, "parent_id": "0x0717fe8b19863581", "start_time": 1740985536157341000, "end_time": 1740985537464516000, "status_code": "OK", "status_message": "", "attributes": {"mlflow.traceRequestId": "\"5aa9e9153514440caab062d15103ded3\"", "mlflow.spanType": "\"CHAT_MODEL\"", "invocation_params": "{\"model\": \"gpt-4o-mini\", \"model_name\": \"gpt-4o-mini\", \"stream\": false, \"_type\": \"openai-chat\", \"stop\": null, \"tools\": [{\"type\": \"function\", \"function\": {\"name\": \"create_recipe_from_intent_tool\", \"description\": \"create_recipe_from_intent_tool - creates a recipe from a natural language intent.\", \"parameters\": {\"properties\": {\"intent\": {\"type\": \"string\"}}, \"required\": [\"intent\"], \"type\": \"object\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"adjust_recipe_quantities_tool\", \"description\": \"adjust_recipe_quantities_tool - adjusts the quantities of ingredients in a recipe based on a natural language input.\\n    Args:\\n        recipe (Recipe): The recipe object containing ingredients, quantities, units, and steps\\n        adjustment (str): Natural language description of how to adjust the recipe\\n            (e.g., \\\"double the recipe\\\", \\\"make it for 6 people instead of 4\\\", \\\"half the portions\\\")\\n    Returns:\\n        Adjusted quantities for each ingredient or an error message if validation fails\", \"parameters\": {\"properties\": {\"recipe\": {\"properties\": {\"ingredients\": {\"description\": \"List of ingredient names.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"quantities\": {\"description\": \"List of quantities for each ingredient\", \"items\": {\"anyOf\": [{\"type\": \"number\"}, {\"type\": \"integer\"}]}, \"type\": \"array\"}, \"units\": {\"description\": \"List of units corresponding to each quantity\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"steps\": {\"description\": \"Ordered list of recipe preparation steps\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"number_of_people\": {\"description\": \"Number of people the recipe is for\", \"type\": \"integer\"}}, \"required\": [\"ingredients\", \"quantities\", \"units\", \"steps\", \"number_of_people\"], \"type\": \"object\"}, \"adjustment\": {\"type\": \"string\"}}, \"required\": [\"recipe\", \"adjustment\"], \"type\": \"object\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"translate_recipe_tool\", \"description\": \"translate_recipe_tool-translates a recipe's ingredients and steps into the specified language.\\n\\n    Args:\\n        recipe (Recipe): The recipe to translate\\n        language (str): Target language for translation\\n\\n    Returns:\\n        Translated ingredients and steps as a list of strings or an error message if validation fails\", \"parameters\": {\"properties\": {\"recipe\": {\"properties\": {\"ingredients\": {\"description\": \"List of ingredient names.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"quantities\": {\"description\": \"List of quantities for each ingredient\", \"items\": {\"anyOf\": [{\"type\": \"number\"}, {\"type\": \"integer\"}]}, \"type\": \"array\"}, \"units\": {\"description\": \"List of units corresponding to each quantity\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"steps\": {\"description\": \"Ordered list of recipe preparation steps\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"number_of_people\": {\"description\": \"Number of people the recipe is for\", \"type\": \"integer\"}}, \"required\": [\"ingredients\", \"quantities\", \"units\", \"steps\", \"number_of_people\"], \"type\": \"object\"}, \"language\": {\"type\": \"string\"}}, \"required\": [\"recipe\", \"language\"], \"type\": \"object\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"clarify_recipe_step_tool\", \"description\": \"clarify_recipe_step_tool - analyzes a recipe and provides detailed clarifications for any steps that might be unclear or need additional explanation.\\n\\n    Args:\\n        recipe (Recipe): A Recipe object containing ingredients, quantities, units, and preparation steps\\n        user_clarification_request (str): A user request for clarification of a specific step in the recipe\\n\\n    Returns:\\n        ClarificationOutput: A detailed explanation of any steps that need clarification, including cooking techniques,\", \"parameters\": {\"properties\": {\"recipe\": {\"properties\": {\"ingredients\": {\"description\": \"List of ingredient names.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"quantities\": {\"description\": \"List of quantities for each ingredient\", \"items\": {\"anyOf\": [{\"type\": \"number\"}, {\"type\": \"integer\"}]}, \"type\": \"array\"}, \"units\": {\"description\": \"List of units corresponding to each quantity\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"steps\": {\"description\": \"Ordered list of recipe preparation steps\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"number_of_people\": {\"description\": \"Number of people the recipe is for\", \"type\": \"integer\"}}, \"required\": [\"ingredients\", \"quantities\", \"units\", \"steps\", \"number_of_people\"], \"type\": \"object\"}, \"clarification_request\": {\"type\": \"string\"}}, \"required\": [\"recipe\", \"clarification_request\"], \"type\": \"object\"}}}, {\"type\": \"function\", \"function\": {\"name\": \"web_search_tool\", \"description\": \"web_search_tool - searches the web for similar recipes using DuckDuckGo.\\n\\n    Args:\\n        recipe (Recipe): The recipe to find similar alternatives for\\n\\n    Returns:\\n        SearchResults: A list of similar recipes found online with their sources or an error message if validation fails\", \"parameters\": {\"properties\": {\"recipe\": {\"properties\": {\"ingredients\": {\"description\": \"List of ingredient names.\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"quantities\": {\"description\": \"List of quantities for each ingredient\", \"items\": {\"anyOf\": [{\"type\": \"number\"}, {\"type\": \"integer\"}]}, \"type\": \"array\"}, \"units\": {\"description\": \"List of units corresponding to each quantity\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"steps\": {\"description\": \"Ordered list of recipe preparation steps\", \"items\": {\"type\": \"string\"}, \"type\": \"array\"}, \"number_of_people\": {\"description\": \"Number of people the recipe is for\", \"type\": \"integer\"}}, \"required\": [\"ingredients\", \"quantities\", \"units\", \"steps\", \"number_of_people\"], \"type\": \"object\"}}, \"required\": [\"recipe\"], \"type\": \"object\"}}}]}", "options": "{\"stop\": null}", "batch_size": "1", "metadata": "{\"langgraph_step\": 1, \"langgraph_node\": \"agent\", \"langgraph_triggers\": [\"start:agent\"], \"langgraph_path\": [\"__pregel_pull\", \"agent\"], \"langgraph_checkpoint_ns\": \"agent:ea40994e-6d83-4774-50b6-4e61adeba14a\", \"checkpoint_ns\": \"agent:ea40994e-6d83-4774-50b6-4e61adeba14a\", \"ls_provider\": \"openai\", \"ls_model_name\": \"gpt-4o-mini\", \"ls_model_type\": \"chat\", \"ls_temperature\": null}", "mlflow.spanInputs": "[[{\"content\": \"\\nYou are a helpful cooking assistant developed by CookPad, under the guidance of Mattia Gaggi.\\nYour goal is to assist users with recipes, offering friendly and engaging cooking advice.\\nIf a user’s request is not related to cooking, politely redirect them back to cooking topics.\\nUse the specified tools as needed to provide the best possible cooking support. If receiving an error from a tool, explain the error based on the error message.\\n\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"system\", \"name\": null, \"id\": null}, {\"content\": \"hey\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"18a52c4f-122b-434d-afec-be6415de5879\", \"example\": false}, {\"content\": \"Hello! How can I assist you with your cooking needs today?\", \"additional_kwargs\": {\"refusal\": null}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 15, \"prompt_tokens\": 784, \"total_tokens\": 799, \"completion_tokens_details\": {\"accepted_prediction_tokens\": 0, \"audio_tokens\": 0, \"reasoning_tokens\": 0, \"rejected_prediction_tokens\": 0}, \"prompt_tokens_details\": {\"audio_tokens\": 0, \"cached_tokens\": 0}}, \"model_name\": \"gpt-4o-mini-2024-07-18\", \"system_fingerprint\": \"fp_06737a9306\", \"finish_reason\": \"stop\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run-2dd0fb5f-3f01-48f8-9af7-453bc16c8b9f-0\", \"example\": false, \"tool_calls\": [], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 784, \"output_tokens\": 15, \"total_tokens\": 799, \"input_token_details\": {\"audio\": 0, \"cache_read\": 0}, \"output_token_details\": {\"audio\": 0, \"reasoning\": 0}}}, {\"content\": \"can you give me a recipe for bread?\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"845c1113-d68a-4880-9da9-6fb37e7d40c3\", \"example\": false}]]", "mlflow.chat.tools": "[{\"type\": \"function\", \"function\": {\"name\": \"create_recipe_from_intent_tool\", \"description\": \"create_recipe_from_intent_tool - creates a recipe from a natural language intent.\", \"parameters\": {\"properties\": {\"intent\": {\"type\": \"string\"}}, \"type\": \"object\", \"required\": [\"intent\"]}}}, {\"type\": \"function\", \"function\": {\"name\": \"adjust_recipe_quantities_tool\", \"description\": \"adjust_recipe_quantities_tool - adjusts the quantities of ingredients in a recipe based on a natural language input.\\n    Args:\\n        recipe (Recipe): The recipe object containing ingredients, quantities, units, and steps\\n        adjustment (str): Natural language description of how to adjust the recipe\\n            (e.g., \\\"double the recipe\\\", \\\"make it for 6 people instead of 4\\\", \\\"half the portions\\\")\\n    Returns:\\n        Adjusted quantities for each ingredient or an error message if validation fails\", \"parameters\": {\"properties\": {\"recipe\": {\"type\": \"object\"}, \"adjustment\": {\"type\": \"string\"}}, \"type\": \"object\", \"required\": [\"recipe\", \"adjustment\"]}}}, {\"type\": \"function\", \"function\": {\"name\": \"translate_recipe_tool\", \"description\": \"translate_recipe_tool-translates a recipe's ingredients and steps into the specified language.\\n\\n    Args:\\n        recipe (Recipe): The recipe to translate\\n        language (str): Target language for translation\\n\\n    Returns:\\n        Translated ingredients and steps as a list of strings or an error message if validation fails\", \"parameters\": {\"properties\": {\"recipe\": {\"type\": \"object\"}, \"language\": {\"type\": \"string\"}}, \"type\": \"object\", \"required\": [\"recipe\", \"language\"]}}}, {\"type\": \"function\", \"function\": {\"name\": \"clarify_recipe_step_tool\", \"description\": \"clarify_recipe_step_tool - analyzes a recipe and provides detailed clarifications for any steps that might be unclear or need additional explanation.\\n\\n    Args:\\n        recipe (Recipe): A Recipe object containing ingredients, quantities, units, and preparation steps\\n        user_clarification_request (str): A user request for clarification of a specific step in the recipe\\n\\n    Returns:\\n        ClarificationOutput: A detailed explanation of any steps that need clarification, including cooking techniques,\", \"parameters\": {\"properties\": {\"recipe\": {\"type\": \"object\"}, \"clarification_request\": {\"type\": \"string\"}}, \"type\": \"object\", \"required\": [\"recipe\", \"clarification_request\"]}}}, {\"type\": \"function\", \"function\": {\"name\": \"web_search_tool\", \"description\": \"web_search_tool - searches the web for similar recipes using DuckDuckGo.\\n\\n    Args:\\n        recipe (Recipe): The recipe to find similar alternatives for\\n\\n    Returns:\\n        SearchResults: A list of similar recipes found online with their sources or an error message if validation fails\", \"parameters\": {\"properties\": {\"recipe\": {\"type\": \"object\"}}, \"type\": \"object\", \"required\": [\"recipe\"]}}}]", "mlflow.chat.messages": "[{\"role\": \"system\", \"content\": \"\\nYou are a helpful cooking assistant developed by CookPad, under the guidance of Mattia Gaggi.\\nYour goal is to assist users with recipes, offering friendly and engaging cooking advice.\\nIf a user’s request is not related to cooking, politely redirect them back to cooking topics.\\nUse the specified tools as needed to provide the best possible cooking support. If receiving an error from a tool, explain the error based on the error message.\\n\"}, {\"role\": \"user\", \"content\": \"hey\"}, {\"role\": \"assistant\", \"content\": \"Hello! How can I assist you with your cooking needs today?\"}, {\"role\": \"user\", \"content\": \"can you give me a recipe for bread?\"}, {\"role\": \"assistant\", \"content\": null, \"tool_calls\": [{\"id\": \"call_0KlYlmKLyZKHRfYUUQYWCrmk\", \"type\": \"function\", \"function\": {\"name\": \"create_recipe_from_intent_tool\", \"arguments\": \"{\\\"intent\\\": \\\"recipe for bread\\\"}\"}}]}]", "mlflow.spanOutputs": "{\"generations\": [[{\"text\": \"\", \"generation_info\": {\"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ChatGeneration\", \"message\": {\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"call_0KlYlmKLyZKHRfYUUQYWCrmk\", \"function\": {\"arguments\": \"{\\\"intent\\\":\\\"recipe for bread\\\"}\", \"name\": \"create_recipe_from_intent_tool\"}, \"type\": \"function\"}], \"refusal\": null}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 21, \"prompt_tokens\": 814, \"total_tokens\": 835, \"completion_tokens_details\": {\"accepted_prediction_tokens\": 0, \"audio_tokens\": 0, \"reasoning_tokens\": 0, \"rejected_prediction_tokens\": 0}, \"prompt_tokens_details\": {\"audio_tokens\": 0, \"cached_tokens\": 0}}, \"model_name\": \"gpt-4o-mini-2024-07-18\", \"system_fingerprint\": \"fp_06737a9306\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run-4e4a1725-e8ce-4386-8394-4edcbfcfdeb8-0\"}}]], \"llm_output\": {\"token_usage\": {\"completion_tokens\": 21, \"prompt_tokens\": 814, \"total_tokens\": 835, \"completion_tokens_details\": {\"accepted_prediction_tokens\": 0, \"audio_tokens\": 0, \"reasoning_tokens\": 0, \"rejected_prediction_tokens\": 0}, \"prompt_tokens_details\": {\"audio_tokens\": 0, \"cached_tokens\": 0}}, \"model_name\": \"gpt-4o-mini-2024-07-18\", \"system_fingerprint\": \"fp_06737a9306\"}, \"run\": null, \"type\": \"LLMResult\"}"}, "events": []}, {"name": "ChannelWrite<...,agent>", "context": {"span_id": "0x6ed772592e347089", "trace_id": "0x1f3bea1c1fd91ae08467120538bead0b"}, "parent_id": "0x0717fe8b19863581", "start_time": 1740985537465416000, "end_time": 1740985537466051000, "status_code": "OK", "status_message": "", "attributes": {"mlflow.traceRequestId": "\"5aa9e9153514440caab062d15103ded3\"", "mlflow.spanType": "\"CHAIN\"", "metadata": "{\"langgraph_step\": 1, \"langgraph_node\": \"agent\", \"langgraph_triggers\": [\"start:agent\"], \"langgraph_path\": [\"__pregel_pull\", \"agent\"], \"langgraph_checkpoint_ns\": \"agent:ea40994e-6d83-4774-50b6-4e61adeba14a\"}", "mlflow.spanInputs": "{\"messages\": [{\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"call_0KlYlmKLyZKHRfYUUQYWCrmk\", \"function\": {\"arguments\": \"{\\\"intent\\\":\\\"recipe for bread\\\"}\", \"name\": \"create_recipe_from_intent_tool\"}, \"type\": \"function\"}], \"refusal\": null}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 21, \"prompt_tokens\": 814, \"total_tokens\": 835, \"completion_tokens_details\": {\"accepted_prediction_tokens\": 0, \"audio_tokens\": 0, \"reasoning_tokens\": 0, \"rejected_prediction_tokens\": 0}, \"prompt_tokens_details\": {\"audio_tokens\": 0, \"cached_tokens\": 0}}, \"model_name\": \"gpt-4o-mini-2024-07-18\", \"system_fingerprint\": \"fp_06737a9306\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run-4e4a1725-e8ce-4386-8394-4edcbfcfdeb8-0\", \"example\": false, \"tool_calls\": [{\"name\": \"create_recipe_from_intent_tool\", \"args\": {\"intent\": \"recipe for bread\"}, \"id\": \"call_0KlYlmKLyZKHRfYUUQYWCrmk\", \"type\": \"tool_call\"}], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 814, \"output_tokens\": 21, \"total_tokens\": 835, \"input_token_details\": {\"audio\": 0, \"cache_read\": 0}, \"output_token_details\": {\"audio\": 0, \"reasoning\": 0}}}]}", "mlflow.spanOutputs": "{\"messages\": [{\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"call_0KlYlmKLyZKHRfYUUQYWCrmk\", \"function\": {\"arguments\": \"{\\\"intent\\\":\\\"recipe for bread\\\"}\", \"name\": \"create_recipe_from_intent_tool\"}, \"type\": \"function\"}], \"refusal\": null}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 21, \"prompt_tokens\": 814, \"total_tokens\": 835, \"completion_tokens_details\": {\"accepted_prediction_tokens\": 0, \"audio_tokens\": 0, \"reasoning_tokens\": 0, \"rejected_prediction_tokens\": 0}, \"prompt_tokens_details\": {\"audio_tokens\": 0, \"cached_tokens\": 0}}, \"model_name\": \"gpt-4o-mini-2024-07-18\", \"system_fingerprint\": \"fp_06737a9306\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run-4e4a1725-e8ce-4386-8394-4edcbfcfdeb8-0\", \"example\": false, \"tool_calls\": [{\"name\": \"create_recipe_from_intent_tool\", \"args\": {\"intent\": \"recipe for bread\"}, \"id\": \"call_0KlYlmKLyZKHRfYUUQYWCrmk\", \"type\": \"tool_call\"}], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 814, \"output_tokens\": 21, \"total_tokens\": 835, \"input_token_details\": {\"audio\": 0, \"cache_read\": 0}, \"output_token_details\": {\"audio\": 0, \"reasoning\": 0}}}]}"}, "events": []}, {"name": "should_continue", "context": {"span_id": "0xa95e7cc6ef4a7518", "trace_id": "0x1f3bea1c1fd91ae08467120538bead0b"}, "parent_id": "0x0717fe8b19863581", "start_time": 1740985537467341000, "end_time": 1740985537467746000, "status_code": "OK", "status_message": "", "attributes": {"mlflow.traceRequestId": "\"5aa9e9153514440caab062d15103ded3\"", "mlflow.spanType": "\"CHAIN\"", "metadata": "{\"langgraph_step\": 1, \"langgraph_node\": \"agent\", \"langgraph_triggers\": [\"start:agent\"], \"langgraph_path\": [\"__pregel_pull\", \"agent\"], \"langgraph_checkpoint_ns\": \"agent:ea40994e-6d83-4774-50b6-4e61adeba14a\"}", "mlflow.spanInputs": "{\"messages\": [{\"content\": \"hey\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"18a52c4f-122b-434d-afec-be6415de5879\", \"example\": false}, {\"content\": \"Hello! How can I assist you with your cooking needs today?\", \"additional_kwargs\": {\"refusal\": null}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 15, \"prompt_tokens\": 784, \"total_tokens\": 799, \"completion_tokens_details\": {\"accepted_prediction_tokens\": 0, \"audio_tokens\": 0, \"reasoning_tokens\": 0, \"rejected_prediction_tokens\": 0}, \"prompt_tokens_details\": {\"audio_tokens\": 0, \"cached_tokens\": 0}}, \"model_name\": \"gpt-4o-mini-2024-07-18\", \"system_fingerprint\": \"fp_06737a9306\", \"finish_reason\": \"stop\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run-2dd0fb5f-3f01-48f8-9af7-453bc16c8b9f-0\", \"example\": false, \"tool_calls\": [], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 784, \"output_tokens\": 15, \"total_tokens\": 799, \"input_token_details\": {\"audio\": 0, \"cache_read\": 0}, \"output_token_details\": {\"audio\": 0, \"reasoning\": 0}}}, {\"content\": \"can you give me a recipe for bread?\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"845c1113-d68a-4880-9da9-6fb37e7d40c3\", \"example\": false}, {\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"call_0KlYlmKLyZKHRfYUUQYWCrmk\", \"function\": {\"arguments\": \"{\\\"intent\\\":\\\"recipe for bread\\\"}\", \"name\": \"create_recipe_from_intent_tool\"}, \"type\": \"function\"}], \"refusal\": null}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 21, \"prompt_tokens\": 814, \"total_tokens\": 835, \"completion_tokens_details\": {\"accepted_prediction_tokens\": 0, \"audio_tokens\": 0, \"reasoning_tokens\": 0, \"rejected_prediction_tokens\": 0}, \"prompt_tokens_details\": {\"audio_tokens\": 0, \"cached_tokens\": 0}}, \"model_name\": \"gpt-4o-mini-2024-07-18\", \"system_fingerprint\": \"fp_06737a9306\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run-4e4a1725-e8ce-4386-8394-4edcbfcfdeb8-0\", \"example\": false, \"tool_calls\": [{\"name\": \"create_recipe_from_intent_tool\", \"args\": {\"intent\": \"recipe for bread\"}, \"id\": \"call_0KlYlmKLyZKHRfYUUQYWCrmk\", \"type\": \"tool_call\"}], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 814, \"output_tokens\": 21, \"total_tokens\": 835, \"input_token_details\": {\"audio\": 0, \"cache_read\": 0}, \"output_token_details\": {\"audio\": 0, \"reasoning\": 0}}}]}", "mlflow.spanOutputs": "\"continue\""}, "events": []}, {"name": "tools", "context": {"span_id": "0x2fa2ee36468673ce", "trace_id": "0x1f3bea1c1fd91ae08467120538bead0b"}, "parent_id": "0xb72e41a22abdbd14", "start_time": 1740985537468634000, "end_time": 1740985550182682000, "status_code": "ERROR", "status_message": "'Recipe' object has no attribute 'title'", "attributes": {"mlflow.traceRequestId": "\"5aa9e9153514440caab062d15103ded3\"", "mlflow.spanType": "\"CHAIN\"", "metadata": "{\"langgraph_step\": 2, \"langgraph_node\": \"tools\", \"langgraph_triggers\": [\"branch:agent:should_continue:tools\"], \"langgraph_path\": [\"__pregel_pull\", \"tools\"], \"langgraph_checkpoint_ns\": \"tools:236d826c-3c54-3d12-e9b9-4ed228f82329\"}", "mlflow.spanInputs": "{\"messages\": [{\"content\": \"hey\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"18a52c4f-122b-434d-afec-be6415de5879\", \"example\": false}, {\"content\": \"Hello! How can I assist you with your cooking needs today?\", \"additional_kwargs\": {\"refusal\": null}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 15, \"prompt_tokens\": 784, \"total_tokens\": 799, \"completion_tokens_details\": {\"accepted_prediction_tokens\": 0, \"audio_tokens\": 0, \"reasoning_tokens\": 0, \"rejected_prediction_tokens\": 0}, \"prompt_tokens_details\": {\"audio_tokens\": 0, \"cached_tokens\": 0}}, \"model_name\": \"gpt-4o-mini-2024-07-18\", \"system_fingerprint\": \"fp_06737a9306\", \"finish_reason\": \"stop\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run-2dd0fb5f-3f01-48f8-9af7-453bc16c8b9f-0\", \"example\": false, \"tool_calls\": [], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 784, \"output_tokens\": 15, \"total_tokens\": 799, \"input_token_details\": {\"audio\": 0, \"cache_read\": 0}, \"output_token_details\": {\"audio\": 0, \"reasoning\": 0}}}, {\"content\": \"can you give me a recipe for bread?\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"845c1113-d68a-4880-9da9-6fb37e7d40c3\", \"example\": false}, {\"content\": \"\", \"additional_kwargs\": {\"tool_calls\": [{\"id\": \"call_0KlYlmKLyZKHRfYUUQYWCrmk\", \"function\": {\"arguments\": \"{\\\"intent\\\":\\\"recipe for bread\\\"}\", \"name\": \"create_recipe_from_intent_tool\"}, \"type\": \"function\"}], \"refusal\": null}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 21, \"prompt_tokens\": 814, \"total_tokens\": 835, \"completion_tokens_details\": {\"accepted_prediction_tokens\": 0, \"audio_tokens\": 0, \"reasoning_tokens\": 0, \"rejected_prediction_tokens\": 0}, \"prompt_tokens_details\": {\"audio_tokens\": 0, \"cached_tokens\": 0}}, \"model_name\": \"gpt-4o-mini-2024-07-18\", \"system_fingerprint\": \"fp_06737a9306\", \"finish_reason\": \"tool_calls\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run-4e4a1725-e8ce-4386-8394-4edcbfcfdeb8-0\", \"example\": false, \"tool_calls\": [{\"name\": \"create_recipe_from_intent_tool\", \"args\": {\"intent\": \"recipe for bread\"}, \"id\": \"call_0KlYlmKLyZKHRfYUUQYWCrmk\", \"type\": \"tool_call\"}], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 814, \"output_tokens\": 21, \"total_tokens\": 835, \"input_token_details\": {\"audio\": 0, \"cache_read\": 0}, \"output_token_details\": {\"audio\": 0, \"reasoning\": 0}}}]}"}, "events": [{"name": "exception", "timestamp": 1740985550182649, "attributes": {"exception.message": "'Recipe' object has no attribute 'title'", "exception.type": "AttributeError", "exception.stacktrace": "AttributeError(\"'Recipe' object has no attribute 'title'\")Traceback (most recent call last):\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langgraph/utils/runnable.py\", line 462, in invoke\n    input = step.invoke(input, config, **kwargs)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 592, in safe_patch_function\n    patch_function(call_original, *args, **kwargs)\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 74, in patched_inference\n    result = _invoke(self, *args, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 66, in _invoke\n    return original(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 573, in call_original\n    return call_original_fn_with_event_logging(_original_fn, og_args, og_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 508, in call_original_fn_with_event_logging\n    original_fn_result = original_fn(*og_args, **og_kwargs)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 570, in _original_fn\n    original_result = original(*_og_args, **_og_kwargs)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langgraph/utils/runnable.py\", line 226, in invoke\n    ret = context.run(self.func, *args, **kwargs)\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/cookbot/src/langraph_utils.py\", line 27, in tool_node\n    tool_result = tools_by_name[tool_call[\"name\"]].invoke(tool_call[\"args\"])\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 592, in safe_patch_function\n    patch_function(call_original, *args, **kwargs)\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 74, in patched_inference\n    result = _invoke(self, *args, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/langchain/_langchain_autolog.py\", line 66, in _invoke\n    return original(self, *args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 573, in call_original\n    return call_original_fn_with_event_logging(_original_fn, og_args, og_kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 508, in call_original_fn_with_event_logging\n    original_fn_result = original_fn(*og_args, **og_kwargs)\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/mlflow/utils/autologging_utils/safety.py\", line 570, in _original_fn\n    original_result = original(*_og_args, **_og_kwargs)\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/tools/base.py\", line 484, in invoke\n    return self.run(tool_input, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/tools/base.py\", line 725, in run\n    raise error_to_raise\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/tools/base.py\", line 693, in run\n    response = context.run(self._run, *tool_args, **tool_kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/tools/structured.py\", line 80, in _run\n    return self.func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/cookbot/src/tools.py\", line 189, in create_recipe_from_intent_tool\n    mlflow.log_text(json.dumps(result.dict(), indent=2), f\"{tool_name}_output_{call_id}_{result.title}.json\")\n                                                                                         ^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/pydantic/main.py\", line 891, in __getattr__\n    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')\n\n\nAttributeError: 'Recipe' object has no attribute 'title'"}}]}, {"name": "create_recipe_from_intent_tool", "context": {"span_id": "0x42ec505e7b8e312c", "trace_id": "0x1f3bea1c1fd91ae08467120538bead0b"}, "parent_id": "0x2fa2ee36468673ce", "start_time": 1740985537469520000, "end_time": 1740985550181414000, "status_code": "ERROR", "status_message": "'Recipe' object has no attribute 'title'", "attributes": {"mlflow.traceRequestId": "\"5aa9e9153514440caab062d15103ded3\"", "mlflow.spanType": "\"TOOL\"", "color": "\"green\"", "metadata": "{\"langgraph_step\": 2, \"langgraph_node\": \"tools\", \"langgraph_triggers\": [\"branch:agent:should_continue:tools\"], \"langgraph_path\": [\"__pregel_pull\", \"tools\"], \"langgraph_checkpoint_ns\": \"tools:236d826c-3c54-3d12-e9b9-4ed228f82329\", \"checkpoint_ns\": \"tools:236d826c-3c54-3d12-e9b9-4ed228f82329\"}", "mlflow.spanInputs": "{\"intent\": \"recipe for bread\"}"}, "events": [{"name": "exception", "timestamp": 1740985550181358, "attributes": {"exception.message": "'Recipe' object has no attribute 'title'", "exception.type": "AttributeError", "exception.stacktrace": "AttributeError(\"'Recipe' object has no attribute 'title'\")Traceback (most recent call last):\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/tools/base.py\", line 693, in run\n    response = context.run(self._run, *tool_args, **tool_kwargs)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/langchain_core/tools/structured.py\", line 80, in _run\n    return self.func(*args, **kwargs)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/cookbot/src/tools.py\", line 189, in create_recipe_from_intent_tool\n    mlflow.log_text(json.dumps(result.dict(), indent=2), f\"{tool_name}_output_{call_id}_{result.title}.json\")\n                                                                                         ^^^^^^^^^^^^\n\n\n  File \"/Users/Mattia/Documents/cookpad/RecipeBot/env/lib/python3.11/site-packages/pydantic/main.py\", line 891, in __getattr__\n    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')\n\n\nAttributeError: 'Recipe' object has no attribute 'title'"}}]}, {"name": "RunnableSequence", "context": {"span_id": "0x19145c42f95593c6", "trace_id": "0x1f3bea1c1fd91ae08467120538bead0b"}, "parent_id": "0x42ec505e7b8e312c", "start_time": 1740985537527752000, "end_time": 1740985550173358000, "status_code": "OK", "status_message": "", "attributes": {"mlflow.traceRequestId": "\"5aa9e9153514440caab062d15103ded3\"", "mlflow.spanType": "\"CHAIN\"", "metadata": "{\"langgraph_step\": 2, \"langgraph_node\": \"tools\", \"langgraph_triggers\": [\"branch:agent:should_continue:tools\"], \"langgraph_path\": [\"__pregel_pull\", \"tools\"], \"langgraph_checkpoint_ns\": \"tools:236d826c-3c54-3d12-e9b9-4ed228f82329\", \"checkpoint_ns\": \"tools:236d826c-3c54-3d12-e9b9-4ed228f82329\"}", "mlflow.spanInputs": "{\"intent\": \"recipe for bread\", \"json_schema\": {\"properties\": {\"ingredients\": {\"description\": \"List of ingredient names.\", \"items\": {\"type\": \"string\"}, \"title\": \"Ingredients\", \"type\": \"array\"}, \"quantities\": {\"description\": \"List of quantities for each ingredient\", \"items\": {\"anyOf\": [{\"type\": \"number\"}, {\"type\": \"integer\"}]}, \"title\": \"Quantities\", \"type\": \"array\"}, \"units\": {\"description\": \"List of units corresponding to each quantity\", \"items\": {\"type\": \"string\"}, \"title\": \"Units\", \"type\": \"array\"}, \"steps\": {\"description\": \"Ordered list of recipe preparation steps\", \"items\": {\"type\": \"string\"}, \"title\": \"Steps\", \"type\": \"array\"}, \"number_of_people\": {\"description\": \"Number of people the recipe is for\", \"title\": \"Number Of People\", \"type\": \"integer\"}}, \"required\": [\"ingredients\", \"quantities\", \"units\", \"steps\", \"number_of_people\"], \"title\": \"Recipe\", \"type\": \"object\"}}", "mlflow.spanOutputs": "{\"ingredients\": [\"All-purpose flour\", \"Water\", \"Yeast\", \"Salt\", \"Sugar\"], \"quantities\": [4, 1.5, 2, 1, 1], \"units\": [\"cups\", \"cups\", \"tablespoons\", \"teaspoon\", \"tablespoon\"], \"steps\": [\"In a large bowl, combine 4 cups of all-purpose flour, 2 tablespoons of yeast, 1 tablespoon of sugar, and 1 teaspoon of salt.\", \"Add 1.5 cups of warm water to the dry ingredients and mix until a dough forms.\", \"Knead the dough on a floured surface for about 10 minutes until smooth.\", \"Place the dough in a lightly greased bowl and cover it. Let it rise for about 1 hour or until doubled in size.\", \"Preheat your oven to 375°F (190°C).\", \"Punch down the dough and shape it into a loaf.\", \"Place the shaped dough in a greased loaf pan and let it rise again for about 30 minutes.\", \"Bake in the preheated oven for 25-30 minutes until golden brown.\", \"Let it cool before slicing.\"], \"number_of_people\": 8}"}, "events": []}, {"name": "ChatPromptTemplate", "context": {"span_id": "0xfb4933f0620a15b6", "trace_id": "0x1f3bea1c1fd91ae08467120538bead0b"}, "parent_id": "0x19145c42f95593c6", "start_time": 1740985537528666000, "end_time": 1740985537529180000, "status_code": "OK", "status_message": "", "attributes": {"mlflow.traceRequestId": "\"5aa9e9153514440caab062d15103ded3\"", "mlflow.spanType": "\"CHAIN\"", "metadata": "{\"langgraph_step\": 2, \"langgraph_node\": \"tools\", \"langgraph_triggers\": [\"branch:agent:should_continue:tools\"], \"langgraph_path\": [\"__pregel_pull\", \"tools\"], \"langgraph_checkpoint_ns\": \"tools:236d826c-3c54-3d12-e9b9-4ed228f82329\", \"checkpoint_ns\": \"tools:236d826c-3c54-3d12-e9b9-4ed228f82329\"}", "mlflow.spanInputs": "{\"intent\": \"recipe for bread\", \"json_schema\": {\"properties\": {\"ingredients\": {\"description\": \"List of ingredient names.\", \"items\": {\"type\": \"string\"}, \"title\": \"Ingredients\", \"type\": \"array\"}, \"quantities\": {\"description\": \"List of quantities for each ingredient\", \"items\": {\"anyOf\": [{\"type\": \"number\"}, {\"type\": \"integer\"}]}, \"title\": \"Quantities\", \"type\": \"array\"}, \"units\": {\"description\": \"List of units corresponding to each quantity\", \"items\": {\"type\": \"string\"}, \"title\": \"Units\", \"type\": \"array\"}, \"steps\": {\"description\": \"Ordered list of recipe preparation steps\", \"items\": {\"type\": \"string\"}, \"title\": \"Steps\", \"type\": \"array\"}, \"number_of_people\": {\"description\": \"Number of people the recipe is for\", \"title\": \"Number Of People\", \"type\": \"integer\"}}, \"required\": [\"ingredients\", \"quantities\", \"units\", \"steps\", \"number_of_people\"], \"title\": \"Recipe\", \"type\": \"object\"}}", "mlflow.spanOutputs": "{\"messages\": [{\"content\": \"\\nGiven the following intent, create a recipe in JSON format.\\n\\nThe recipe must match closely anything specified in the intent, the ingredients and steps must be as close as possible to the intent, the quantities must be standard quantities.\\nReview the recipe and make sure it is correct. Clearly define the quantities and for how many people the recipe is for, infer the number of people from the quantities if not specified.\\nIf the intent is not clear, ask remember to guess what the user wants and output the recipe with all the information required.\\n\\nIntent: recipe for bread\\nReturn your answer in the following JSON format:\\n{'properties': {'ingredients': {'description': 'List of ingredient names.', 'items': {'type': 'string'}, 'title': 'Ingredients', 'type': 'array'}, 'quantities': {'description': 'List of quantities for each ingredient', 'items': {'anyOf': [{'type': 'number'}, {'type': 'integer'}]}, 'title': 'Quantities', 'type': 'array'}, 'units': {'description': 'List of units corresponding to each quantity', 'items': {'type': 'string'}, 'title': 'Units', 'type': 'array'}, 'steps': {'description': 'Ordered list of recipe preparation steps', 'items': {'type': 'string'}, 'title': 'Steps', 'type': 'array'}, 'number_of_people': {'description': 'Number of people the recipe is for', 'title': 'Number Of People', 'type': 'integer'}}, 'required': ['ingredients', 'quantities', 'units', 'steps', 'number_of_people'], 'title': 'Recipe', 'type': 'object'}\\n\\n\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": null}]}"}, "events": []}, {"name": "ChatOpenAI_2", "context": {"span_id": "0x32b46c969099443e", "trace_id": "0x1f3bea1c1fd91ae08467120538bead0b"}, "parent_id": "0x19145c42f95593c6", "start_time": 1740985537530321000, "end_time": 1740985550171784000, "status_code": "OK", "status_message": "", "attributes": {"mlflow.traceRequestId": "\"5aa9e9153514440caab062d15103ded3\"", "mlflow.spanType": "\"CHAT_MODEL\"", "invocation_params": "{\"model\": \"gpt-4o-mini\", \"model_name\": \"gpt-4o-mini\", \"stream\": false, \"_type\": \"openai-chat\", \"stop\": null, \"response_format\": {\"type\": \"json_object\"}}", "options": "{\"stop\": null}", "batch_size": "1", "metadata": "{\"langgraph_step\": 2, \"langgraph_node\": \"tools\", \"langgraph_triggers\": [\"branch:agent:should_continue:tools\"], \"langgraph_path\": [\"__pregel_pull\", \"tools\"], \"langgraph_checkpoint_ns\": \"tools:236d826c-3c54-3d12-e9b9-4ed228f82329\", \"checkpoint_ns\": \"tools:236d826c-3c54-3d12-e9b9-4ed228f82329\", \"ls_provider\": \"openai\", \"ls_model_name\": \"gpt-4o-mini\", \"ls_model_type\": \"chat\", \"ls_temperature\": null}", "mlflow.spanInputs": "[[{\"content\": \"\\nGiven the following intent, create a recipe in JSON format.\\n\\nThe recipe must match closely anything specified in the intent, the ingredients and steps must be as close as possible to the intent, the quantities must be standard quantities.\\nReview the recipe and make sure it is correct. Clearly define the quantities and for how many people the recipe is for, infer the number of people from the quantities if not specified.\\nIf the intent is not clear, ask remember to guess what the user wants and output the recipe with all the information required.\\n\\nIntent: recipe for bread\\nReturn your answer in the following JSON format:\\n{'properties': {'ingredients': {'description': 'List of ingredient names.', 'items': {'type': 'string'}, 'title': 'Ingredients', 'type': 'array'}, 'quantities': {'description': 'List of quantities for each ingredient', 'items': {'anyOf': [{'type': 'number'}, {'type': 'integer'}]}, 'title': 'Quantities', 'type': 'array'}, 'units': {'description': 'List of units corresponding to each quantity', 'items': {'type': 'string'}, 'title': 'Units', 'type': 'array'}, 'steps': {'description': 'Ordered list of recipe preparation steps', 'items': {'type': 'string'}, 'title': 'Steps', 'type': 'array'}, 'number_of_people': {'description': 'Number of people the recipe is for', 'title': 'Number Of People', 'type': 'integer'}}, 'required': ['ingredients', 'quantities', 'units', 'steps', 'number_of_people'], 'title': 'Recipe', 'type': 'object'}\\n\\n\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": null, \"example\": false}]]", "mlflow.chat.messages": "[{\"role\": \"user\", \"content\": \"\\nGiven the following intent, create a recipe in JSON format.\\n\\nThe recipe must match closely anything specified in the intent, the ingredients and steps must be as close as possible to the intent, the quantities must be standard quantities.\\nReview the recipe and make sure it is correct. Clearly define the quantities and for how many people the recipe is for, infer the number of people from the quantities if not specified.\\nIf the intent is not clear, ask remember to guess what the user wants and output the recipe with all the information required.\\n\\nIntent: recipe for bread\\nReturn your answer in the following JSON format:\\n{'properties': {'ingredients': {'description': 'List of ingredient names.', 'items': {'type': 'string'}, 'title': 'Ingredients', 'type': 'array'}, 'quantities': {'description': 'List of quantities for each ingredient', 'items': {'anyOf': [{'type': 'number'}, {'type': 'integer'}]}, 'title': 'Quantities', 'type': 'array'}, 'units': {'description': 'List of units corresponding to each quantity', 'items': {'type': 'string'}, 'title': 'Units', 'type': 'array'}, 'steps': {'description': 'Ordered list of recipe preparation steps', 'items': {'type': 'string'}, 'title': 'Steps', 'type': 'array'}, 'number_of_people': {'description': 'Number of people the recipe is for', 'title': 'Number Of People', 'type': 'integer'}}, 'required': ['ingredients', 'quantities', 'units', 'steps', 'number_of_people'], 'title': 'Recipe', 'type': 'object'}\\n\\n\"}, {\"role\": \"assistant\", \"content\": \"{\\n  \\\"properties\\\": {\\n    \\\"ingredients\\\": {\\n      \\\"description\\\": \\\"List of ingredient names.\\\",\\n      \\\"items\\\": {\\n        \\\"type\\\": \\\"string\\\"\\n      },\\n      \\\"title\\\": \\\"Ingredients\\\",\\n      \\\"type\\\": \\\"array\\\"\\n    },\\n    \\\"quantities\\\": {\\n      \\\"description\\\": \\\"List of quantities for each ingredient\\\",\\n      \\\"items\\\": {\\n        \\\"anyOf\\\": [\\n          {\\n            \\\"type\\\": \\\"number\\\"\\n          },\\n          {\\n            \\\"type\\\": \\\"integer\\\"\\n          }\\n        ]\\n      },\\n      \\\"title\\\": \\\"Quantities\\\",\\n      \\\"type\\\": \\\"array\\\"\\n    },\\n    \\\"units\\\": {\\n      \\\"description\\\": \\\"List of units corresponding to each quantity\\\",\\n      \\\"items\\\": {\\n        \\\"type\\\": \\\"string\\\"\\n      },\\n      \\\"title\\\": \\\"Units\\\",\\n      \\\"type\\\": \\\"array\\\"\\n    },\\n    \\\"steps\\\": {\\n      \\\"description\\\": \\\"Ordered list of recipe preparation steps\\\",\\n      \\\"items\\\": {\\n        \\\"type\\\": \\\"string\\\"\\n      },\\n      \\\"title\\\": \\\"Steps\\\",\\n      \\\"type\\\": \\\"array\\\"\\n    },\\n    \\\"number_of_people\\\": {\\n      \\\"description\\\": \\\"Number of people the recipe is for\\\",\\n      \\\"title\\\": \\\"Number Of People\\\",\\n      \\\"type\\\": \\\"integer\\\"\\n    }\\n  },\\n  \\\"required\\\": [\\n    \\\"ingredients\\\",\\n    \\\"quantities\\\",\\n    \\\"units\\\",\\n    \\\"steps\\\",\\n    \\\"number_of_people\\\"\\n  ],\\n  \\\"title\\\": \\\"Recipe\\\",\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"ingredients\\\": [\\n    \\\"All-purpose flour\\\",\\n    \\\"Water\\\",\\n    \\\"Yeast\\\",\\n    \\\"Salt\\\",\\n    \\\"Sugar\\\"\\n  ],\\n  \\\"quantities\\\": [\\n    4,\\n    1.5,\\n    2,\\n    1,\\n    1\\n  ],\\n  \\\"units\\\": [\\n    \\\"cups\\\",\\n    \\\"cups\\\",\\n    \\\"tablespoons\\\",\\n    \\\"teaspoon\\\",\\n    \\\"tablespoon\\\"\\n  ],\\n  \\\"steps\\\": [\\n    \\\"In a large bowl, combine 4 cups of all-purpose flour, 2 tablespoons of yeast, 1 tablespoon of sugar, and 1 teaspoon of salt.\\\",\\n    \\\"Add 1.5 cups of warm water to the dry ingredients and mix until a dough forms.\\\",\\n    \\\"Knead the dough on a floured surface for about 10 minutes until smooth.\\\",\\n    \\\"Place the dough in a lightly greased bowl and cover it. Let it rise for about 1 hour or until doubled in size.\\\",\\n    \\\"Preheat your oven to 375°F (190°C).\\\",\\n    \\\"Punch down the dough and shape it into a loaf.\\\",\\n    \\\"Place the shaped dough in a greased loaf pan and let it rise again for about 30 minutes.\\\",\\n    \\\"Bake in the preheated oven for 25-30 minutes until golden brown.\\\",\\n    \\\"Let it cool before slicing.\\\"\\n  ],\\n  \\\"number_of_people\\\": 8\\n}\"}]", "mlflow.spanOutputs": "{\"generations\": [[{\"text\": \"{\\n  \\\"properties\\\": {\\n    \\\"ingredients\\\": {\\n      \\\"description\\\": \\\"List of ingredient names.\\\",\\n      \\\"items\\\": {\\n        \\\"type\\\": \\\"string\\\"\\n      },\\n      \\\"title\\\": \\\"Ingredients\\\",\\n      \\\"type\\\": \\\"array\\\"\\n    },\\n    \\\"quantities\\\": {\\n      \\\"description\\\": \\\"List of quantities for each ingredient\\\",\\n      \\\"items\\\": {\\n        \\\"anyOf\\\": [\\n          {\\n            \\\"type\\\": \\\"number\\\"\\n          },\\n          {\\n            \\\"type\\\": \\\"integer\\\"\\n          }\\n        ]\\n      },\\n      \\\"title\\\": \\\"Quantities\\\",\\n      \\\"type\\\": \\\"array\\\"\\n    },\\n    \\\"units\\\": {\\n      \\\"description\\\": \\\"List of units corresponding to each quantity\\\",\\n      \\\"items\\\": {\\n        \\\"type\\\": \\\"string\\\"\\n      },\\n      \\\"title\\\": \\\"Units\\\",\\n      \\\"type\\\": \\\"array\\\"\\n    },\\n    \\\"steps\\\": {\\n      \\\"description\\\": \\\"Ordered list of recipe preparation steps\\\",\\n      \\\"items\\\": {\\n        \\\"type\\\": \\\"string\\\"\\n      },\\n      \\\"title\\\": \\\"Steps\\\",\\n      \\\"type\\\": \\\"array\\\"\\n    },\\n    \\\"number_of_people\\\": {\\n      \\\"description\\\": \\\"Number of people the recipe is for\\\",\\n      \\\"title\\\": \\\"Number Of People\\\",\\n      \\\"type\\\": \\\"integer\\\"\\n    }\\n  },\\n  \\\"required\\\": [\\n    \\\"ingredients\\\",\\n    \\\"quantities\\\",\\n    \\\"units\\\",\\n    \\\"steps\\\",\\n    \\\"number_of_people\\\"\\n  ],\\n  \\\"title\\\": \\\"Recipe\\\",\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"ingredients\\\": [\\n    \\\"All-purpose flour\\\",\\n    \\\"Water\\\",\\n    \\\"Yeast\\\",\\n    \\\"Salt\\\",\\n    \\\"Sugar\\\"\\n  ],\\n  \\\"quantities\\\": [\\n    4,\\n    1.5,\\n    2,\\n    1,\\n    1\\n  ],\\n  \\\"units\\\": [\\n    \\\"cups\\\",\\n    \\\"cups\\\",\\n    \\\"tablespoons\\\",\\n    \\\"teaspoon\\\",\\n    \\\"tablespoon\\\"\\n  ],\\n  \\\"steps\\\": [\\n    \\\"In a large bowl, combine 4 cups of all-purpose flour, 2 tablespoons of yeast, 1 tablespoon of sugar, and 1 teaspoon of salt.\\\",\\n    \\\"Add 1.5 cups of warm water to the dry ingredients and mix until a dough forms.\\\",\\n    \\\"Knead the dough on a floured surface for about 10 minutes until smooth.\\\",\\n    \\\"Place the dough in a lightly greased bowl and cover it. Let it rise for about 1 hour or until doubled in size.\\\",\\n    \\\"Preheat your oven to 375°F (190°C).\\\",\\n    \\\"Punch down the dough and shape it into a loaf.\\\",\\n    \\\"Place the shaped dough in a greased loaf pan and let it rise again for about 30 minutes.\\\",\\n    \\\"Bake in the preheated oven for 25-30 minutes until golden brown.\\\",\\n    \\\"Let it cool before slicing.\\\"\\n  ],\\n  \\\"number_of_people\\\": 8\\n}\", \"generation_info\": {\"finish_reason\": \"stop\", \"logprobs\": null}, \"type\": \"ChatGeneration\", \"message\": {\"content\": \"{\\n  \\\"properties\\\": {\\n    \\\"ingredients\\\": {\\n      \\\"description\\\": \\\"List of ingredient names.\\\",\\n      \\\"items\\\": {\\n        \\\"type\\\": \\\"string\\\"\\n      },\\n      \\\"title\\\": \\\"Ingredients\\\",\\n      \\\"type\\\": \\\"array\\\"\\n    },\\n    \\\"quantities\\\": {\\n      \\\"description\\\": \\\"List of quantities for each ingredient\\\",\\n      \\\"items\\\": {\\n        \\\"anyOf\\\": [\\n          {\\n            \\\"type\\\": \\\"number\\\"\\n          },\\n          {\\n            \\\"type\\\": \\\"integer\\\"\\n          }\\n        ]\\n      },\\n      \\\"title\\\": \\\"Quantities\\\",\\n      \\\"type\\\": \\\"array\\\"\\n    },\\n    \\\"units\\\": {\\n      \\\"description\\\": \\\"List of units corresponding to each quantity\\\",\\n      \\\"items\\\": {\\n        \\\"type\\\": \\\"string\\\"\\n      },\\n      \\\"title\\\": \\\"Units\\\",\\n      \\\"type\\\": \\\"array\\\"\\n    },\\n    \\\"steps\\\": {\\n      \\\"description\\\": \\\"Ordered list of recipe preparation steps\\\",\\n      \\\"items\\\": {\\n        \\\"type\\\": \\\"string\\\"\\n      },\\n      \\\"title\\\": \\\"Steps\\\",\\n      \\\"type\\\": \\\"array\\\"\\n    },\\n    \\\"number_of_people\\\": {\\n      \\\"description\\\": \\\"Number of people the recipe is for\\\",\\n      \\\"title\\\": \\\"Number Of People\\\",\\n      \\\"type\\\": \\\"integer\\\"\\n    }\\n  },\\n  \\\"required\\\": [\\n    \\\"ingredients\\\",\\n    \\\"quantities\\\",\\n    \\\"units\\\",\\n    \\\"steps\\\",\\n    \\\"number_of_people\\\"\\n  ],\\n  \\\"title\\\": \\\"Recipe\\\",\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"ingredients\\\": [\\n    \\\"All-purpose flour\\\",\\n    \\\"Water\\\",\\n    \\\"Yeast\\\",\\n    \\\"Salt\\\",\\n    \\\"Sugar\\\"\\n  ],\\n  \\\"quantities\\\": [\\n    4,\\n    1.5,\\n    2,\\n    1,\\n    1\\n  ],\\n  \\\"units\\\": [\\n    \\\"cups\\\",\\n    \\\"cups\\\",\\n    \\\"tablespoons\\\",\\n    \\\"teaspoon\\\",\\n    \\\"tablespoon\\\"\\n  ],\\n  \\\"steps\\\": [\\n    \\\"In a large bowl, combine 4 cups of all-purpose flour, 2 tablespoons of yeast, 1 tablespoon of sugar, and 1 teaspoon of salt.\\\",\\n    \\\"Add 1.5 cups of warm water to the dry ingredients and mix until a dough forms.\\\",\\n    \\\"Knead the dough on a floured surface for about 10 minutes until smooth.\\\",\\n    \\\"Place the dough in a lightly greased bowl and cover it. Let it rise for about 1 hour or until doubled in size.\\\",\\n    \\\"Preheat your oven to 375°F (190°C).\\\",\\n    \\\"Punch down the dough and shape it into a loaf.\\\",\\n    \\\"Place the shaped dough in a greased loaf pan and let it rise again for about 30 minutes.\\\",\\n    \\\"Bake in the preheated oven for 25-30 minutes until golden brown.\\\",\\n    \\\"Let it cool before slicing.\\\"\\n  ],\\n  \\\"number_of_people\\\": 8\\n}\", \"additional_kwargs\": {\"parsed\": null, \"refusal\": null}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 594, \"prompt_tokens\": 348, \"total_tokens\": 942, \"completion_tokens_details\": {\"accepted_prediction_tokens\": 0, \"audio_tokens\": 0, \"reasoning_tokens\": 0, \"rejected_prediction_tokens\": 0}, \"prompt_tokens_details\": {\"audio_tokens\": 0, \"cached_tokens\": 0}}, \"model_name\": \"gpt-4o-mini-2024-07-18\", \"system_fingerprint\": \"fp_06737a9306\", \"finish_reason\": \"stop\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run-a2d1fd11-854e-40c2-9cba-db3759fe83e5-0\"}}]], \"llm_output\": {\"token_usage\": {\"completion_tokens\": 594, \"prompt_tokens\": 348, \"total_tokens\": 942, \"completion_tokens_details\": {\"accepted_prediction_tokens\": 0, \"audio_tokens\": 0, \"reasoning_tokens\": 0, \"rejected_prediction_tokens\": 0}, \"prompt_tokens_details\": {\"audio_tokens\": 0, \"cached_tokens\": 0}}, \"model_name\": \"gpt-4o-mini-2024-07-18\", \"system_fingerprint\": \"fp_06737a9306\"}, \"run\": null, \"type\": \"LLMResult\"}"}, "events": []}, {"name": "PydanticOutputParser", "context": {"span_id": "0x72201d30f52617d8", "trace_id": "0x1f3bea1c1fd91ae08467120538bead0b"}, "parent_id": "0x19145c42f95593c6", "start_time": 1740985550172690000, "end_time": 1740985550173269000, "status_code": "OK", "status_message": "", "attributes": {"mlflow.traceRequestId": "\"5aa9e9153514440caab062d15103ded3\"", "mlflow.spanType": "\"CHAIN\"", "metadata": "{\"langgraph_step\": 2, \"langgraph_node\": \"tools\", \"langgraph_triggers\": [\"branch:agent:should_continue:tools\"], \"langgraph_path\": [\"__pregel_pull\", \"tools\"], \"langgraph_checkpoint_ns\": \"tools:236d826c-3c54-3d12-e9b9-4ed228f82329\", \"checkpoint_ns\": \"tools:236d826c-3c54-3d12-e9b9-4ed228f82329\"}", "mlflow.spanInputs": "{\"content\": \"{\\n  \\\"properties\\\": {\\n    \\\"ingredients\\\": {\\n      \\\"description\\\": \\\"List of ingredient names.\\\",\\n      \\\"items\\\": {\\n        \\\"type\\\": \\\"string\\\"\\n      },\\n      \\\"title\\\": \\\"Ingredients\\\",\\n      \\\"type\\\": \\\"array\\\"\\n    },\\n    \\\"quantities\\\": {\\n      \\\"description\\\": \\\"List of quantities for each ingredient\\\",\\n      \\\"items\\\": {\\n        \\\"anyOf\\\": [\\n          {\\n            \\\"type\\\": \\\"number\\\"\\n          },\\n          {\\n            \\\"type\\\": \\\"integer\\\"\\n          }\\n        ]\\n      },\\n      \\\"title\\\": \\\"Quantities\\\",\\n      \\\"type\\\": \\\"array\\\"\\n    },\\n    \\\"units\\\": {\\n      \\\"description\\\": \\\"List of units corresponding to each quantity\\\",\\n      \\\"items\\\": {\\n        \\\"type\\\": \\\"string\\\"\\n      },\\n      \\\"title\\\": \\\"Units\\\",\\n      \\\"type\\\": \\\"array\\\"\\n    },\\n    \\\"steps\\\": {\\n      \\\"description\\\": \\\"Ordered list of recipe preparation steps\\\",\\n      \\\"items\\\": {\\n        \\\"type\\\": \\\"string\\\"\\n      },\\n      \\\"title\\\": \\\"Steps\\\",\\n      \\\"type\\\": \\\"array\\\"\\n    },\\n    \\\"number_of_people\\\": {\\n      \\\"description\\\": \\\"Number of people the recipe is for\\\",\\n      \\\"title\\\": \\\"Number Of People\\\",\\n      \\\"type\\\": \\\"integer\\\"\\n    }\\n  },\\n  \\\"required\\\": [\\n    \\\"ingredients\\\",\\n    \\\"quantities\\\",\\n    \\\"units\\\",\\n    \\\"steps\\\",\\n    \\\"number_of_people\\\"\\n  ],\\n  \\\"title\\\": \\\"Recipe\\\",\\n  \\\"type\\\": \\\"object\\\",\\n  \\\"ingredients\\\": [\\n    \\\"All-purpose flour\\\",\\n    \\\"Water\\\",\\n    \\\"Yeast\\\",\\n    \\\"Salt\\\",\\n    \\\"Sugar\\\"\\n  ],\\n  \\\"quantities\\\": [\\n    4,\\n    1.5,\\n    2,\\n    1,\\n    1\\n  ],\\n  \\\"units\\\": [\\n    \\\"cups\\\",\\n    \\\"cups\\\",\\n    \\\"tablespoons\\\",\\n    \\\"teaspoon\\\",\\n    \\\"tablespoon\\\"\\n  ],\\n  \\\"steps\\\": [\\n    \\\"In a large bowl, combine 4 cups of all-purpose flour, 2 tablespoons of yeast, 1 tablespoon of sugar, and 1 teaspoon of salt.\\\",\\n    \\\"Add 1.5 cups of warm water to the dry ingredients and mix until a dough forms.\\\",\\n    \\\"Knead the dough on a floured surface for about 10 minutes until smooth.\\\",\\n    \\\"Place the dough in a lightly greased bowl and cover it. Let it rise for about 1 hour or until doubled in size.\\\",\\n    \\\"Preheat your oven to 375°F (190°C).\\\",\\n    \\\"Punch down the dough and shape it into a loaf.\\\",\\n    \\\"Place the shaped dough in a greased loaf pan and let it rise again for about 30 minutes.\\\",\\n    \\\"Bake in the preheated oven for 25-30 minutes until golden brown.\\\",\\n    \\\"Let it cool before slicing.\\\"\\n  ],\\n  \\\"number_of_people\\\": 8\\n}\", \"additional_kwargs\": {\"parsed\": null, \"refusal\": null}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 594, \"prompt_tokens\": 348, \"total_tokens\": 942, \"completion_tokens_details\": {\"accepted_prediction_tokens\": 0, \"audio_tokens\": 0, \"reasoning_tokens\": 0, \"rejected_prediction_tokens\": 0}, \"prompt_tokens_details\": {\"audio_tokens\": 0, \"cached_tokens\": 0}}, \"model_name\": \"gpt-4o-mini-2024-07-18\", \"system_fingerprint\": \"fp_06737a9306\", \"finish_reason\": \"stop\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run-a2d1fd11-854e-40c2-9cba-db3759fe83e5-0\", \"example\": false, \"tool_calls\": [], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 348, \"output_tokens\": 594, \"total_tokens\": 942, \"input_token_details\": {\"audio\": 0, \"cache_read\": 0}, \"output_token_details\": {\"audio\": 0, \"reasoning\": 0}}}", "mlflow.spanOutputs": "{\"ingredients\": [\"All-purpose flour\", \"Water\", \"Yeast\", \"Salt\", \"Sugar\"], \"quantities\": [4, 1.5, 2, 1, 1], \"units\": [\"cups\", \"cups\", \"tablespoons\", \"teaspoon\", \"tablespoon\"], \"steps\": [\"In a large bowl, combine 4 cups of all-purpose flour, 2 tablespoons of yeast, 1 tablespoon of sugar, and 1 teaspoon of salt.\", \"Add 1.5 cups of warm water to the dry ingredients and mix until a dough forms.\", \"Knead the dough on a floured surface for about 10 minutes until smooth.\", \"Place the dough in a lightly greased bowl and cover it. Let it rise for about 1 hour or until doubled in size.\", \"Preheat your oven to 375°F (190°C).\", \"Punch down the dough and shape it into a loaf.\", \"Place the shaped dough in a greased loaf pan and let it rise again for about 30 minutes.\", \"Bake in the preheated oven for 25-30 minutes until golden brown.\", \"Let it cool before slicing.\"], \"number_of_people\": 8}"}, "events": []}], "request": "{\"messages\": [{\"content\": \"hey\", \"additional_kwargs\": {}, \"response_metadata\": {}, \"type\": \"human\", \"name\": null, \"id\": \"18a52c4f-122b-434d-afec-be6415de5879\", \"example\": false}, {\"content\": \"Hello! How can I assist you with your cooking needs today?\", \"additional_kwargs\": {\"refusal\": null}, \"response_metadata\": {\"token_usage\": {\"completion_tokens\": 15, \"prompt_tokens\": 784, \"total_tokens\": 799, \"completion_tokens_details\": {\"accepted_prediction_tokens\": 0, \"audio_tokens\": 0, \"reasoning_tokens\": 0, \"rejected_prediction_tokens\": 0}, \"prompt_tokens_details\": {\"audio_tokens\": 0, \"cached_tokens\": 0}}, \"model_name\": \"gpt-4o-mini-2024-07-18\", \"system_fingerprint\": \"fp_06737a9306\", \"finish_reason\": \"stop\", \"logprobs\": null}, \"type\": \"ai\", \"name\": null, \"id\": \"run-2dd0fb5f-3f01-48f8-9af7-453bc16c8b9f-0\", \"example\": false, \"tool_calls\": [], \"invalid_tool_calls\": [], \"usage_metadata\": {\"input_tokens\": 784, \"output_tokens\": 15, \"total_tokens\": 799, \"input_token_details\": {\"audio\": 0, \"cache_read\": 0}, \"output_token_details\": {\"audio\": 0, \"reasoning\": 0}}}, [\"user\", \"can you give me a recipe for bread?\"]]}", "response": null}